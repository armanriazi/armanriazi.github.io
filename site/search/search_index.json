{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Go Surfing On...","title":"Index"},{"location":"about/","text":"About Me Arman Riazi knows how to move your business, mind, developing on blockchain 4.0. Getting Luxary services that you can afford. I have been working on the Blockchain ecosystem as a CryptoTrader and Blockchain developer for about 2 years. Following the table is my recent experience and my favorite \ud83d\ude0b for access to archive before 2020 you can click on it. Exprt: Experience Prd: Period Desc: Description Priority: My Interest priority for keep in continue Exprt Prd Priority Desc CryptoTrading 1 Y Experience losts liquid because of trading crypto in 2021 \ud83e\udd15 Solidity 2 M It seems to me that there would be better languages for developing so in the near furure we need to low-level lang for improve performance hardware resources IBM HyperLedger 1 M HyperLedger is suited for organizations especially. Hyperledger has got good community and uses cloud-native tools but I think it is not a real decentralized blockchain framework for scalability and giving governance so I used to decide a little bit work on it Rust-Lang 4 M Fantastic, complex language for decentralized/distributed Substrate 2 M Awsome work of \ud83d\ude4fDr.gavin and parity.io community Polkadot & Kusuma 1 M Crowdloan, tokenization\ud83d\udcb2, parachain and parathreads Blockchain research 6 M It is always included in my routine activity during a day About 8-month trading, 2 months solidity, 4 months rust-lang, 2 months substrate, 2 months research on Polkadot ecosystem, 6 month scholar research on blockchain. There is not exactly the time to estimate spend time since developing and learning would go with each other. In my opinion, developers who had a kind of skills like Frontend, Backend, or Database have been forced into the Blockchain ecosystem because of the charm of the subject and the rapid growth and evolution of the Technology. I wonder to let you know I am big on Substrate and WASM [[Substrate]][[WASM]] to apply for mixing experiences and technologies that lead to Defi2.0 & Web3.0 . Hands-On Experience With Blockchain Developing. Knowledge Of Blockchain Structure. Experienced With Software Development Lifecycle. Experienced With Cloud-Computing And #DevOps #CloudNative Tools. Expert In Modern Programming Languages. Have Technical Conscience To Define The Right Blockchain Solutions. Understand Decentralized Ledgers and Configure Full/Master#Node. Technical Knowledge of Standards and Ecosystems. Cryptocurrency #trading and using financial services. Graduated M.Sc [[master]] In Field Of Information Technology. Over 10 years of experience in designing, developing, deploying, analyzing, and implementing [[Cloud]]-native, web, and software engineers. Expertise in the architecture of #Microservices and distributed systems, and modifying related application code. Capable of learning new programming languages and technologies. Good communication, problem-solving, documentation, and analytical. Capable of learning new skills and concepts quickly. Maintain effective relationships with others. General features including Research, Creative, Analyze, Developing. Highly organized, motivated, confident. I have a passport and I finished military service.","title":"About"},{"location":"about/#about-me","text":"Arman Riazi knows how to move your business, mind, developing on blockchain 4.0. Getting Luxary services that you can afford. I have been working on the Blockchain ecosystem as a CryptoTrader and Blockchain developer for about 2 years. Following the table is my recent experience and my favorite \ud83d\ude0b for access to archive before 2020 you can click on it. Exprt: Experience Prd: Period Desc: Description Priority: My Interest priority for keep in continue Exprt Prd Priority Desc CryptoTrading 1 Y Experience losts liquid because of trading crypto in 2021 \ud83e\udd15 Solidity 2 M It seems to me that there would be better languages for developing so in the near furure we need to low-level lang for improve performance hardware resources IBM HyperLedger 1 M HyperLedger is suited for organizations especially. Hyperledger has got good community and uses cloud-native tools but I think it is not a real decentralized blockchain framework for scalability and giving governance so I used to decide a little bit work on it Rust-Lang 4 M Fantastic, complex language for decentralized/distributed Substrate 2 M Awsome work of \ud83d\ude4fDr.gavin and parity.io community Polkadot & Kusuma 1 M Crowdloan, tokenization\ud83d\udcb2, parachain and parathreads Blockchain research 6 M It is always included in my routine activity during a day About 8-month trading, 2 months solidity, 4 months rust-lang, 2 months substrate, 2 months research on Polkadot ecosystem, 6 month scholar research on blockchain. There is not exactly the time to estimate spend time since developing and learning would go with each other. In my opinion, developers who had a kind of skills like Frontend, Backend, or Database have been forced into the Blockchain ecosystem because of the charm of the subject and the rapid growth and evolution of the Technology. I wonder to let you know I am big on Substrate and WASM [[Substrate]][[WASM]] to apply for mixing experiences and technologies that lead to Defi2.0 & Web3.0 . Hands-On Experience With Blockchain Developing. Knowledge Of Blockchain Structure. Experienced With Software Development Lifecycle. Experienced With Cloud-Computing And #DevOps #CloudNative Tools. Expert In Modern Programming Languages. Have Technical Conscience To Define The Right Blockchain Solutions. Understand Decentralized Ledgers and Configure Full/Master#Node. Technical Knowledge of Standards and Ecosystems. Cryptocurrency #trading and using financial services. Graduated M.Sc [[master]] In Field Of Information Technology. Over 10 years of experience in designing, developing, deploying, analyzing, and implementing [[Cloud]]-native, web, and software engineers. Expertise in the architecture of #Microservices and distributed systems, and modifying related application code. Capable of learning new programming languages and technologies. Good communication, problem-solving, documentation, and analytical. Capable of learning new skills and concepts quickly. Maintain effective relationships with others. General features including Research, Creative, Analyze, Developing. Highly organized, motivated, confident. I have a passport and I finished military service.","title":"About Me"},{"location":"links/","text":"plink English Resume Youtube Channel Papers On Blockchain Read.Cash Medium Ecency Repo-Doc-Blockchain Github Gitlab Aparat Channel Linux foundation Linkedin ResearchGate Dev.to Stackoverflow CodeGrepper Linktr.ee Personal WebSite(Archived) Arazhit Aramisit ArmanRiazi Email addresses Job Developer Scholar Skype ID armanriazi","title":"Links"},{"location":"links/#plink","text":"English Resume Youtube Channel","title":"plink"},{"location":"links/#papers-on-blockchain","text":"Read.Cash Medium Ecency Repo-Doc-Blockchain Github Gitlab Aparat Channel Linux foundation Linkedin ResearchGate Dev.to Stackoverflow CodeGrepper Linktr.ee","title":"Papers On Blockchain"},{"location":"links/#personal-websitearchived","text":"Arazhit Aramisit ArmanRiazi","title":"Personal WebSite(Archived)"},{"location":"links/#email-addresses","text":"Job Developer Scholar Skype ID armanriazi","title":"Email addresses"},{"location":"tags/","text":"Tags Following is a list of relevant tags:","title":"Tags"},{"location":"tags/#tags","text":"Following is a list of relevant tags:","title":"Tags"},{"location":"private/private/","text":"English Slide-Until-2019","title":"Private"},{"location":"private/todo/","text":"ToDo","title":"ToDo"},{"location":"private/todo/#todo","text":"","title":"ToDo"},{"location":"private/english/english/","text":"[[description]] On the one #hand, #I would want to tell the truth. On the other hand, I wouldn't want to get in #trouble. Believe it or not #I've always influenced by dr.gavinwood . Her works are so creative! It's another #way of looking at things and it's a lot more positive. It's the only #chance #I get to find out [[what]]'s been going on in the world tech and catch up with the current affairs. [[you]]'re #standing on the exact site [[where]] Dr.gavin founded 2018. [[Due]] to my interest and my experience to Blockchain these things will still be worth something [[when]] I have finished paying off the debt because #I used to trade cryptocurrency! Most programmers see themselves #as an intelligence. Actually, #I don't think either of us did. We only got it because we couldn't #agree on a painted color/selected type of smart contract. [[abilities]] I can't face myself I don't [[think]] of myself as a hero person I tend to [[work]] at office.it gives me ... It can be realistic. [[change]] Are these changes #due to... [[do]] We should do that before we #continue We will do anything #as long as it is legal. [[sorry]] Sorry to interrupt ,but... [[could]] I interrupt for a #moment? [[organize]] I just need to #sort it out with you [[mean]] It's saying, it means to #make... I've been meaning to speak to you all evening. [[need]] [[you]] need to exercise more often [[got]] I've got some good news to deliver The migration is getting harder. I've got some bad news to deliver [[going]] I'm going to be #hired I was going to call you [[know]] I know [[what]] you [[mean]] , but... [[try]] I never gained any information except self-study I am just tried of the same old grind I try to study English between the other activities of the day Ok.#I'll give that a try The more you try, the easier it will get Do it and then [[as]] soon as you finish try another solution one after the other [[think]] Do [[you]] think it's... I think I will pass I noticed that... I have no #idea In my #opinion...(=I find it) To each his own. Everyone has a different #opinion Good point I dunno To me, it's just total waste of [[time]] I am not #sure this module would go with it. (From my point of view,/it seems to me that)There should be learning [[rather]] than coding. [[talk]] [[you]] talked about... [[time]] I will just be a #minute. It took me ages to #learn to develop substrate. All the services are out at the [[moment]]. I need some time to [[think]] this over. [[like]] I'd like to ask [[when]] you should [[talk]]... [[let]] Let's #work on with together Let me #continue Let me explain one more [[time]] [[interest]] I'm interested in knowing [[what]] kind of... [[take]] the bills take seven working days to go through, is that all right? [[problem]] I maybe #wrong, but... We are on the #wrong track. Sometimes that [[take]]s care of it=to see if that does the trick=fixes the problem It couldn't hurt to ask someone. I've got a bit of a problem in the project. the noun not [[work]]ing. After a [[while]] #I realized it wasn't [[work]]ing. It [[take]]s a little [[while]] to [[work]]. She is lack of opinion. So #I had a look at the .thinking It might be that. But that seems to be ok...I was wondering [[if]] you could... [[If]] you want #I could change it. It's been working fine. It would be good [[if]] #I could get it fix. I don't know [[if]] it works but we try it. It can get you into trouble [[if]] [[you]] don't use unit test. The situation is getting out of control. I'm looking forward to this trip Without doubt, it's the #must-see clip of this toturial. The whole clip blends together well. But complications arise [[when]] it... It is [[cause]] by.. I think it must be a fault with your OS [[right]] [[you]]'re right [[you]] #may be right, but... I #agree whole heartly [[you]]'re probably right. Me too= [[o]] do I. Front End doesn't #agree with me. [[rather]] I'd rather to let me finish it that is all right compared to... This is opposite of noun The 'move' closure is often #used alongside 'thread:: spawn' I haven't seen a framework [[as]] good as substrate. [[wonder]] I wonder [[what]] challenges next month will bring for the team I just wonder to let you know... [[work]] I'm just fooling around online. I've been working at the computer all day I work on substrate in the last few months [[question]] One more question Pardon? Am [[I]] allowed to use my mobile phone? What am [[I]] doing? [[Which]] is the best way encoding? [[Who]] am I meeting? [[Why]] don't you give that a try first? [[What]] do you [[think]] of it? did [[you]] catch the process photos I posted? [[Why]] don't [[you]] [[try]] restarting? [[What]]'s causing all this? [[Would]] you like to put this on your wallet? Was there much bug? How much are we [[talking]] about? [[Why]] don't you mind creating a new start up? Can #I find a something in the meantime? [[Which]] task do you associate with current plan? You know what? The first [[point]] is about how much you spend for your Blockchain positions? Is there any range for specifying it? Is there anyway to get a cheaper fare. [[What]] is this module made of? [[Where]] were these products made? [[How were]] those modules manufactured? [[How]] are they [[take]]n? [[What]] are they used for? [[Could]] you [[take]] a look at this? [[Could]] you please send message on Whatsapp? [[Would]] it be possible to get someone come at the airport? [[Will]] there be an opportunity to do some getting advice? [[Can]] you just make sure you send it to him asap? I was just [[wonder]]ing how many people there are? Is your team [[doing]] well? [[what]] would you do first? [[Which]] of the following would you do? [[question_time]] How long will it take? [[When]] was this app released? Have [[you]] [[got]] a minute? [[How long]] is the career contact? Do you [[mind]] waiting? [[question_details]] I'd be interested to hear more about... Can you say a bit more about? Is insurance #included? [[How much]] notice must I give if I want to leave early? [[Who]] do I contact if there is a question? Do you [[think]] that's going to do any good? [[What]] is one [[problem]] [[caused]] by compiler. [[How should]] we deal with? [[What seems]]to the #trouble? The [[problem]] should go in a minute. [[What's]] the #difference in type of framework?","title":"Example Page"},{"location":"private/english/english/#youre-standing-on-the-exact-site-where-drgavin-founded-2018","text":"[[Due]] to my interest and my experience to Blockchain these things will still be worth something [[when]] I have finished paying off the debt because #I used to trade cryptocurrency! Most programmers see themselves #as an intelligence. Actually, #I don't think either of us did. We only got it because we couldn't #agree on a painted color/selected type of smart contract. [[abilities]]","title":"[[you]]'re #standing on the exact site [[where]] Dr.gavin founded 2018."},{"location":"private/english/english/#i-cant-face-myself","text":"","title":"I can't face myself"},{"location":"private/english/english/#i-dont-think-of-myself-as-a-hero-person","text":"","title":"I don't [[think]] of myself as a hero person"},{"location":"private/english/english/#i-tend-to-work-at-officeit-gives-me","text":"It can be realistic. [[change]] Are these changes #due to... [[do]] We should do that before we #continue We will do anything #as long as it is legal. [[sorry]] Sorry to interrupt ,but... [[could]] I interrupt for a #moment? [[organize]]","title":"I tend to [[work]] at office.it gives me ..."},{"location":"private/english/english/#i-just-need-to-sort-it-out-with-you","text":"[[mean]] It's saying, it means to #make...","title":"I just need to #sort it out with you"},{"location":"private/english/english/#ive-been-meaning-to-speak-to-you-all-evening","text":"[[need]] [[you]] need to exercise more often [[got]]","title":"I've been meaning to speak to you all evening."},{"location":"private/english/english/#ive-got-some-good-news-to-deliver","text":"The migration is getting harder.","title":"I've got some good news to deliver"},{"location":"private/english/english/#ive-got-some-bad-news-to-deliver","text":"[[going]]","title":"I've got some bad news to deliver"},{"location":"private/english/english/#im-going-to-be-hired","text":"","title":"I'm going to be #hired"},{"location":"private/english/english/#i-was-going-to-call-you","text":"[[know]]","title":"I was going to call you"},{"location":"private/english/english/#i-know-what-you-mean-but","text":"[[try]]","title":"I know [[what]] you [[mean]] , but..."},{"location":"private/english/english/#i-never-gained-any-information-except-self-study","text":"","title":"I never gained any information except self-study"},{"location":"private/english/english/#i-am-just-tried-of-the-same-old-grind","text":"","title":"I am just tried of the same old grind"},{"location":"private/english/english/#i-try-to-study-english-between-the-other-activities-of-the-day","text":"Ok.#I'll give that a try The more you try, the easier it will get Do it and then [[as]] soon as you finish try another solution one after the other [[think]] Do [[you]] think it's...","title":"I try to study English between the other activities of the day"},{"location":"private/english/english/#i-think-i-will-pass","text":"","title":"I think I will pass"},{"location":"private/english/english/#i-noticed-that","text":"","title":"I noticed that..."},{"location":"private/english/english/#i-have-no-idea","text":"In my #opinion...(=I find it) To each his own. Everyone has a different #opinion Good point","title":"I have no #idea"},{"location":"private/english/english/#i-dunno","text":"To me, it's just total waste of [[time]]","title":"I dunno"},{"location":"private/english/english/#i-am-not-sure-this-module-would-go-with-it","text":"(From my point of view,/it seems to me that)There should be learning [[rather]] than coding. [[talk]] [[you]] talked about... [[time]]","title":"I am not #sure this module would go with it."},{"location":"private/english/english/#i-will-just-be-a-minute","text":"It took me ages to #learn to develop substrate. All the services are out at the [[moment]]. I need some time to [[think]] this over. [[like]]","title":"I will just be a #minute."},{"location":"private/english/english/#id-like-to-ask-when-you-should-talk","text":"[[let]] Let's #work on with together Let me #continue Let me explain one more [[time]] [[interest]]","title":"I'd like to ask [[when]] you should [[talk]]..."},{"location":"private/english/english/#im-interested-in-knowing-what-kind-of","text":"[[take]] the bills take seven working days to go through, is that all right? [[problem]]","title":"I'm interested in knowing [[what]] kind of..."},{"location":"private/english/english/#i-maybe-wrong-but","text":"We are on the #wrong track. Sometimes that [[take]]s care of it=to see if that does the trick=fixes the problem It couldn't hurt to ask someone.","title":"I maybe #wrong, but..."},{"location":"private/english/english/#ive-got-a-bit-of-a-problem-in-the-project-the-noun-not-working","text":"After a [[while]] #I realized it wasn't [[work]]ing. It [[take]]s a little [[while]] to [[work]]. She is lack of opinion. So #I had a look at the .thinking It might be that. But that seems to be ok...I was wondering [[if]] you could... [[If]] you want #I could change it. It's been working fine. It would be good [[if]] #I could get it fix.","title":"I've got a bit of a problem in the project. the noun not [[work]]ing."},{"location":"private/english/english/#i-dont-know-if-it-works-but-we-try-it","text":"It can get you into trouble [[if]] [[you]] don't use unit test. The situation is getting out of control.","title":"I don't know [[if]] it works but we try it."},{"location":"private/english/english/#im-looking-forward-to-this-trip","text":"Without doubt, it's the #must-see clip of this toturial. The whole clip blends together well. But complications arise [[when]] it... It is [[cause]] by..","title":"I'm looking forward to this trip"},{"location":"private/english/english/#i-think-it-must-be-a-fault-with-your-os","text":"[[right]] [[you]]'re right [[you]] #may be right, but...","title":"I think it must be a fault with your OS"},{"location":"private/english/english/#i-agree-whole-heartly","text":"","title":"I #agree whole heartly"},{"location":"private/english/english/#youre-probably-right","text":"Me too= [[o]] do I. Front End doesn't #agree with me. [[rather]]","title":"[[you]]'re probably right."},{"location":"private/english/english/#id-rather-to-let-me-finish-it-that-is-all-right","text":"","title":"I'd rather to let me finish it that is all right"},{"location":"private/english/english/#compared-to","text":"This is opposite of noun The 'move' closure is often #used alongside 'thread:: spawn'","title":"compared to..."},{"location":"private/english/english/#i-havent-seen-a-framework-as-good-as-substrate","text":"[[wonder]]","title":"I haven't seen a framework [[as]] good as substrate."},{"location":"private/english/english/#i-wonder-what-challenges-next-month-will-bring-for-the-team","text":"","title":"I wonder [[what]] challenges next month will bring for the team"},{"location":"private/english/english/#i-just-wonder-to-let-you-know","text":"[[work]]","title":"I just wonder to let you know..."},{"location":"private/english/english/#im-just-fooling-around-online","text":"","title":"I'm just fooling around online."},{"location":"private/english/english/#ive-been-working-at-the-computer-all-day","text":"","title":"I've been working at the computer all day"},{"location":"private/english/english/#i-work-on-substrate-in-the-last-few-months","text":"[[question]] One more question Pardon? Am [[I]] allowed to use my mobile phone? What am [[I]] doing? [[Which]] is the best way encoding? [[Who]] am I meeting? [[Why]] don't you give that a try first? [[What]] do you [[think]] of it? did [[you]] catch the process photos I posted? [[Why]] don't [[you]] [[try]] restarting? [[What]]'s causing all this? [[Would]] you like to put this on your wallet? Was there much bug? How much are we [[talking]] about? [[Why]] don't you mind creating a new start up? Can #I find a something in the meantime? [[Which]] task do you associate with current plan? You know what? The first [[point]] is about how much you spend for your Blockchain positions? Is there any range for specifying it? Is there anyway to get a cheaper fare. [[What]] is this module made of? [[Where]] were these products made? [[How were]] those modules manufactured? [[How]] are they [[take]]n? [[What]] are they used for? [[Could]] you [[take]] a look at this? [[Could]] you please send message on Whatsapp? [[Would]] it be possible to get someone come at the airport? [[Will]] there be an opportunity to do some getting advice? [[Can]] you just make sure you send it to him asap?","title":"I work on substrate in the last few months"},{"location":"private/english/english/#i-was-just-wondering-how-many-people-there-are","text":"Is your team [[doing]] well? [[what]] would you do first? [[Which]] of the following would you do? [[question_time]] How long will it take? [[When]] was this app released? Have [[you]] [[got]] a minute? [[How long]] is the career contact? Do you [[mind]] waiting? [[question_details]] I'd be interested to hear more about... Can you say a bit more about? Is insurance #included? [[How much]] notice must I give if I want to leave early? [[Who]] do I contact if there is a question? Do you [[think]] that's going to do any good? [[What]] is one [[problem]] [[caused]] by compiler. [[How should]] we deal with? [[What seems]]to the #trouble? The [[problem]] should go in a minute. [[What's]] the #difference in type of framework?","title":"I was just [[wonder]]ing how many people there are?"},{"location":"private/slides/slide-until2019/","text":"Slides Archived Until 2019","title":"Slide until2019"},{"location":"public/public/","text":"Day-Notes 2022 Blockchain Rust DevOps Engineer Master Thesis Archive-Projects Links","title":"Walk-through"},{"location":"public/archive/archive-2016-2019/","text":"[[Archived]]-until-2016 devops Demo version of organization portal Angular 6 GraphQl SqlServer Rest Api 2018 Management e-commerce Deployed On Container & Orchestration with Kubernetes MongoDB Asp.NetCore 3.1 2020 Management e-commerce 1 Management e-commerce 2 Management e-commerce 3","title":"[[Archived]]-until-2016"},{"location":"public/archive/archive-2016-2019/#archived-until-2016","text":"devops Demo version of organization portal Angular 6 GraphQl SqlServer Rest Api 2018 Management e-commerce Deployed On Container & Orchestration with Kubernetes MongoDB Asp.NetCore 3.1 2020 Management e-commerce 1 Management e-commerce 2 Management e-commerce 3","title":"[[Archived]]-until-2016"},{"location":"public/archive/archive-until-2016/","text":"[[Archived]]-until-2016 Website Cultural Store CMS builder Website Carpet Factory Website Computer Store Resume WebSite Website Sales Photo Dadyar-Advocacy Software CNG Warehouse Software University Archive Software Website Conference Base on Network-P2P Info","title":"[[Archived]]-until-2016"},{"location":"public/archive/archive-until-2016/#archived-until-2016","text":"Website Cultural Store CMS builder Website Carpet Factory Website Computer Store Resume WebSite Website Sales Photo Dadyar-Advocacy Software CNG Warehouse Software University Archive Software Website Conference Base on Network-P2P Info","title":"[[Archived]]-until-2016"},{"location":"public/archive/cms-builder/","text":"[[CMS]] Builder [[Archived]] Use [[AngularJs]] & [[WebApi]] technology Responds to all your operations without the need to refresh the page Single Page Application([[SPA]]) Define tree structure Angular SPA CMS","title":"[[CMS]] Builder [[Archived]]"},{"location":"public/archive/cms-builder/#cms-builder-archived","text":"Use [[AngularJs]] & [[WebApi]] technology Responds to all your operations without the need to refresh the page Single Page Application([[SPA]]) Define tree structure","title":"[[CMS]] Builder [[Archived]]"},{"location":"public/archive/cms-builder/#angular","text":"","title":"Angular"},{"location":"public/archive/cms-builder/#spa","text":"","title":"SPA"},{"location":"public/archive/cms-builder/#cms","text":"","title":"CMS"},{"location":"public/archive/cng/","text":"CNG Warehouse [[Software]] [[Archived]] Advanced reporting features with a variety of search filters by Crystal [[Report]] Computing facilities in the accounting department and presenting invoices to the [[Customer]] Very user friendly interface Dynamic content presentation Security facilities for anonymous people to enter Ability to remind checks on the main page of the application Reporter Desktop Windows Telerik Info","title":"CNG Warehouse [[Software]] [[Archived]]"},{"location":"public/archive/cng/#cng-warehouse-software-archived","text":"Advanced reporting features with a variety of search filters by Crystal [[Report]] Computing facilities in the accounting department and presenting invoices to the [[Customer]] Very user friendly interface Dynamic content presentation Security facilities for anonymous people to enter Ability to remind checks on the main page of the application","title":"CNG Warehouse [[Software]] [[Archived]]"},{"location":"public/archive/cng/#reporter","text":"","title":"Reporter"},{"location":"public/archive/cng/#desktop","text":"","title":"Desktop"},{"location":"public/archive/cng/#windows","text":"","title":"Windows"},{"location":"public/archive/cng/#telerik","text":"Info","title":"Telerik"},{"location":"public/archive/dadyar/","text":"[[Advocate]]-Dadyar [[Archived]] Advanced reporting features with a variety of search filters by Crystal Report Dynamic printing facilities for all types of petition forms and ... Has a very strong and stylish user interface Record client details Has dynamic content presentation Security facilities for anonymous people to enter Windows [[CrystalReporter]] Printer Login [[Telerik]] ??? info","title":"Dadyar"},{"location":"public/archive/dadyar/#advocate-dadyar-archived","text":"Advanced reporting features with a variety of search filters by Crystal Report Dynamic printing facilities for all types of petition forms and ... Has a very strong and stylish user interface Record client details Has dynamic content presentation Security facilities for anonymous people to enter","title":"[[Advocate]]-Dadyar [[Archived]]"},{"location":"public/archive/dadyar/#windows","text":"","title":"Windows"},{"location":"public/archive/dadyar/#crystalreporter","text":"","title":"[[CrystalReporter]]"},{"location":"public/archive/dadyar/#printer","text":"","title":"Printer"},{"location":"public/archive/dadyar/#login","text":"","title":"Login"},{"location":"public/archive/dadyar/#telerik","text":"??? info","title":"[[Telerik]]"},{"location":"public/archive/main/","text":"Archive 2016-2019 Archive Until 2016","title":"Main"},{"location":"public/archive/my-old-website/","text":"My Old Resume WebSite [[Archived]] Used MVC architecture Script features to display the slide section as well as on the main page of the site Define dynamic photos and upload for display in the Slide Show section ##### [[MVC]] ##### [[C#]] ##### [[JQuery]] Info","title":"My Old Resume WebSite [[Archived]]"},{"location":"public/archive/my-old-website/#my-old-resume-website-archived","text":"Used MVC architecture Script features to display the slide section as well as on the main page of the site Define dynamic photos and upload for display in the Slide Show section ##### [[MVC]] ##### [[C#]] ##### [[JQuery]] Info","title":"My Old Resume WebSite [[Archived]]"},{"location":"public/archive/university-archive-software/","text":"University Archive Software [[Archived]] Advanced reporting features with a variety of search filters by Crystal Report The software is under the network within the organization User friendly interface Dynamics in content presentation and reporting Archive files with serial number and barcode Archive Software Network SqlServer Socket Windows [[C#]] Info","title":"University Archive Software [[Archived]]"},{"location":"public/archive/university-archive-software/#university-archive-software-archived","text":"Advanced reporting features with a variety of search filters by Crystal Report The software is under the network within the organization User friendly interface Dynamics in content presentation and reporting Archive files with serial number and barcode","title":"University Archive Software [[Archived]]"},{"location":"public/archive/university-archive-software/#archive-software","text":"","title":"Archive Software"},{"location":"public/archive/university-archive-software/#network","text":"","title":"Network"},{"location":"public/archive/university-archive-software/#sqlserver","text":"","title":"SqlServer"},{"location":"public/archive/university-archive-software/#socket","text":"","title":"Socket"},{"location":"public/archive/university-archive-software/#windows","text":"","title":"Windows"},{"location":"public/archive/university-archive-software/#c","text":"Info","title":"[[C#]]"},{"location":"public/archive/website-carpet-factory/","text":"WebSite Carpet Factory [[Archived]] Possibility of electronic payment Send promotional [[SMS]] as well as after each customer purchase Post a poll without refreshing the browser Script features to display the gallery section and also on the main page of the site Ability to insert news dynamically It has got separate CRM section ##### CRM ##### Electronic Payment ##### [[ASP.NET]] ##### SMS ##### Payment ??? info","title":"WebSite Carpet Factory [[Archived]]"},{"location":"public/archive/website-carpet-factory/#website-carpet-factory-archived","text":"Possibility of electronic payment Send promotional [[SMS]] as well as after each customer purchase Post a poll without refreshing the browser Script features to display the gallery section and also on the main page of the site Ability to insert news dynamically It has got separate CRM section ##### CRM ##### Electronic Payment ##### [[ASP.NET]] ##### SMS ##### Payment ??? info","title":"WebSite Carpet Factory [[Archived]]"},{"location":"public/archive/website-computer-store/","text":"Website Computer Store [[Archived]] Used MVC architecture Event-oriented Drag & Drop home screen Script features to display the slide section as well as on the main page of the site Define dynamic photos and upload for display in the Slide Show section Define their category management of products Possibility of electronic payment by PEC WebServices MVC JQuery CMS Electronic Payment [[C#]] Info","title":"Website Computer Store [[Archived]]"},{"location":"public/archive/website-computer-store/#website-computer-store-archived","text":"Used MVC architecture Event-oriented Drag & Drop home screen Script features to display the slide section as well as on the main page of the site Define dynamic photos and upload for display in the Slide Show section Define their category management of products Possibility of electronic payment by PEC WebServices","title":"Website Computer Store [[Archived]]"},{"location":"public/archive/website-computer-store/#mvc","text":"","title":"MVC"},{"location":"public/archive/website-computer-store/#jquery","text":"","title":"JQuery"},{"location":"public/archive/website-computer-store/#cms","text":"","title":"CMS"},{"location":"public/archive/website-computer-store/#electronic-payment","text":"","title":"Electronic Payment"},{"location":"public/archive/website-computer-store/#c","text":"Info","title":"[[C#]]"},{"location":"public/archive/website-conference/","text":"Website Conference Base on Network-P2P [[Archived]] No need to install any software through the Silverlight web browser plugin/extension. Contains management software of the desktop application type on the server as well as coded (Socket-SilverLight) on web clients that call the server ID on their browser. Ability to text chat and send files simultaneously and online Conference Network Conference Site WebApp Chat Network Software Simultaneous chat schedule Silverlight C ??? info","title":"Website Conference Base on Network-P2P [[Archived]]"},{"location":"public/archive/website-conference/#website-conference-base-on-network-p2p-archived","text":"No need to install any software through the Silverlight web browser plugin/extension. Contains management software of the desktop application type on the server as well as coded (Socket-SilverLight) on web clients that call the server ID on their browser. Ability to text chat and send files simultaneously and online","title":"Website Conference Base on Network-P2P [[Archived]]"},{"location":"public/archive/website-conference/#conference","text":"","title":"Conference"},{"location":"public/archive/website-conference/#network-conference-site","text":"","title":"Network Conference Site"},{"location":"public/archive/website-conference/#webapp-chat","text":"","title":"WebApp Chat"},{"location":"public/archive/website-conference/#network-software","text":"","title":"Network Software"},{"location":"public/archive/website-conference/#simultaneous-chat-schedule","text":"","title":"Simultaneous chat schedule"},{"location":"public/archive/website-conference/#silverlight","text":"","title":"Silverlight"},{"location":"public/archive/website-conference/#c","text":"??? info","title":"C"},{"location":"public/archive/website-cultural-store/","text":"Website Cultural Store [[Archived]] Used AngularJs & WebApi technology Respond to all user operations synchronously without to need to refresh the page Single Page Application Having a shopping cart dynamically and simultaneously Display the contents of orders completely simultaneously Used BootStrap Dynamic categories from the Category attribute with getting updates from the database ##### [[Angularjs]] ##### Electronic Payment ##### SPA ##### [[BootStrap]] ##### [[C#]] ??? info","title":"Website Cultural Store [[Archived]]"},{"location":"public/archive/website-cultural-store/#website-cultural-store-archived","text":"Used AngularJs & WebApi technology Respond to all user operations synchronously without to need to refresh the page Single Page Application Having a shopping cart dynamically and simultaneously Display the contents of orders completely simultaneously Used BootStrap Dynamic categories from the Category attribute with getting updates from the database ##### [[Angularjs]] ##### Electronic Payment ##### SPA ##### [[BootStrap]] ##### [[C#]] ??? info","title":"Website Cultural Store [[Archived]]"},{"location":"public/archive/website-sales-photo/","text":"WebSite Sales Photo [[Archived]] Ability to online payment Ability to upload and download multiple image files simultaneously Having a website visitor statistics section Ability to search advanced images in the gallery Script features to display the gallery section and also on the main page of the site Ability to insert news dynamically Having a separated CRM section CRM Electronic Payment Editor Filter Crop [[ASP.NET]] [[C#]] Info","title":"WebSite Sales Photo [[Archived]]"},{"location":"public/archive/website-sales-photo/#website-sales-photo-archived","text":"Ability to online payment Ability to upload and download multiple image files simultaneously Having a website visitor statistics section Ability to search advanced images in the gallery Script features to display the gallery section and also on the main page of the site Ability to insert news dynamically Having a separated CRM section","title":"WebSite Sales Photo [[Archived]]"},{"location":"public/archive/website-sales-photo/#crm","text":"","title":"CRM"},{"location":"public/archive/website-sales-photo/#electronic-payment","text":"","title":"Electronic Payment"},{"location":"public/archive/website-sales-photo/#editor","text":"","title":"Editor"},{"location":"public/archive/website-sales-photo/#filter","text":"","title":"Filter"},{"location":"public/archive/website-sales-photo/#crop","text":"","title":"Crop"},{"location":"public/archive/website-sales-photo/#aspnet","text":"","title":"[[ASP.NET]]"},{"location":"public/archive/website-sales-photo/#c","text":"Info","title":"[[C#]]"},{"location":"public/blockchain/HyperLedger-IBM/","text":"Using standards defined: flexibility, scalability, availability of service under any circumstances, the above mentioned through another branch of technology called DevOps that is compatible with web applications and blockchain, the ability to implement and strengthen the blockchain The author of this project has been working on it. Due to the learning of blockchain, we are faced with several technologies, two of which we will mention. The use of HyperLedger, which is provided under the supervision of Linux and is also used by IBM, and the second case is the use of Ethereum, the second version of which is scheduled to be released by the end of 2021 based on the POS consensus algorithm. The figure above shows the fact that large companies today rely on open source tools for their infrastructure components, and what you see is all free, but the company has been able to establish an effective communication platform base on the cloud. In short, we are not dealing with occasional challenges, but rather \"wheels will not move unless the engine system works properly.\"","title":"HyperLedger IBM"},{"location":"public/blockchain/Solidity/","text":"Dapp Blockchain Development Applications are distributed in multiple programming languages. One of the most important of these is a development based on the Atrium network infrastructure. In the following example, a blockchain is used using the voting system. That only one person will have one vote. Transparency Distributed Integrity ETH Base on Blockchain Private Test Network Example of Decentralized Program - Voting The following example is made of blockchain using a point-to-point trading system. Each user buys a product with their Atrium MetaMask wallet, which leads to the deduction of the amount of Atrium in the buyer's wallet and at the same time is credited to the seller's account according to the smart contract. This sample does not follow the internal network in the previous sample It uses an atrium test network called Kovan. Example of Decentralized Application - Point-to-point sales https://www.aparat.com/v/mTl3d https://www.aparat.com/v/QzG5x","title":"Solidity"},{"location":"public/blockchain/Substrate/","text":"","title":"Substrate"},{"location":"public/blockchain/WASM/","text":"","title":"WASM"},{"location":"public/blockchain/corda-r3/","text":"This platform defines blockchain network standards; It is a smart contract and token that allows JVM virtual machines that are similar to Atrium EVM to execute designed protocols. https://aparat.com/v/6gYuO\"","title":"Corda r3"},{"location":"public/blockchain/hyperledger-auzre/","text":"Blockchain as a service Scale-up with Kubernetes Docker-compose Wrote by Hyperledger-Compose Pay-as-you-go Secured by Microsoft","title":"Hyperledger auzre"},{"location":"public/blockchain/hyperledger-golang/","text":"Features Golang On-premise Define Blockchain as manual and changeable Scratch Structure Deploy on docker Scale-up by Kubernetes No need for pay-as-you-go services Complex implementation","title":"Hyperledger golang"},{"location":"public/blockchain/main/","text":"hyperledger-auzre-2020 hyperledger-golang-2020 hyperledger-ibm-2020 solidity-2021 corda-r3-2021","title":"Main"},{"location":"public/day-notes/2022/","text":"04","title":"2022"},{"location":"public/day-notes/2022/04/","text":"2022-04-01 2022-04-02 2022-04-03","title":"04"},{"location":"public/day-notes/2022/04/days/2022-04-01/","text":"","title":"2022 04 01"},{"location":"public/day-notes/2022/04/days/2022-04-02/","text":"","title":"2022 04 02"},{"location":"public/day-notes/2022/04/days/2022-04-03/","text":"2022-03-29","title":"2022-03-29"},{"location":"public/day-notes/2022/04/days/2022-04-03/#2022-03-29","text":"","title":"2022-03-29"},{"location":"public/devops/Cloud/","text":"Using Cloud Services Part 1 Cloud9-AWS","title":"Cloud"},{"location":"public/devops/Elastic-Search/","text":"Features Rest API Database Search Crawler Analyze Dashboard Quaryable Scalability Machine learning Quote To Configure ELK stack you need a lot of hardware resource I rented VPS to work in 2020. My experience says it is so power-full and all-in-one database rather than the other DBs. Info Report of Gartner 2020 about ELK stack Dashboards(Location, System APIs, Logs of resources system, Filter,Advance search,...)","title":"Elastic Search"},{"location":"public/devops/Elastic-Search/#features","text":"Rest API Database Search Crawler Analyze Dashboard Quaryable Scalability Machine learning Quote To Configure ELK stack you need a lot of hardware resource I rented VPS to work in 2020. My experience says it is so power-full and all-in-one database rather than the other DBs. Info Report of Gartner 2020 about ELK stack Dashboards(Location, System APIs, Logs of resources system, Filter,Advance search,...)","title":"Features"},{"location":"public/devops/Kubernetes/","text":"Kubernetes Capabilities Scheduling and orchestrating application containers As an Infrastructure for Microservices Integrate with hundreds of tools such as (ELK, Rancher, ...) Optimal use of consume resources To increase speed and self-organize while the team doing develop Protecting the Website from Attacks Website maintenance without interruption and guaranteed It has been defined go through the CaaS layers like Rancher, but we know that this service itself is a Micro PaaS. I prefer to use kubernetes in the Rancher. Quote I eager to try it again especially use it in [[HyperLedger-IBM]] projects. Info Version ~2018 Show used Features Show Part 1- used kubernetes version 1.0","title":"Kubernetes Capabilities"},{"location":"public/devops/Kubernetes/#kubernetes-capabilities","text":"Scheduling and orchestrating application containers As an Infrastructure for Microservices Integrate with hundreds of tools such as (ELK, Rancher, ...) Optimal use of consume resources To increase speed and self-organize while the team doing develop Protecting the Website from Attacks Website maintenance without interruption and guaranteed It has been defined go through the CaaS layers like Rancher, but we know that this service itself is a Micro PaaS. I prefer to use kubernetes in the Rancher. Quote I eager to try it again especially use it in [[HyperLedger-IBM]] projects. Info Version ~2018 Show used Features Show Part 1- used kubernetes version 1.0","title":"Kubernetes Capabilities"},{"location":"public/devops/Virtualization/","text":"[[VSphere]] 7.1- Features Server virtualization Optimal use of resources Reduce processing costs and power consumption To use the [[Kubernetes]] with high speed execution Remote communication to a server Run multiple operating systems simultaneously Quote To know virtualization is obligate for blockchain developers. [[Senior]] full-stack developers have associated with it. My [[master]] thesis have being demonstrated cloud and virtualization. The virtualization concepts are simulated as kind of containers and virtual machines.","title":"[[VSphere]] 7.1- Features"},{"location":"public/devops/Virtualization/#vsphere-71-features","text":"Server virtualization Optimal use of resources Reduce processing costs and power consumption To use the [[Kubernetes]] with high speed execution Remote communication to a server Run multiple operating systems simultaneously Quote To know virtualization is obligate for blockchain developers. [[Senior]] full-stack developers have associated with it. My [[master]] thesis have being demonstrated cloud and virtualization. The virtualization concepts are simulated as kind of containers and virtual machines.","title":"[[VSphere]] 7.1- Features"},{"location":"public/devops/main/","text":"Cloud Virtualization Elastic-Search Kubernetes","title":"Main"},{"location":"public/mynotes/exp-2021cryprotrading/","text":"Experience loss of money because of trading crypto in 2021 \ud83e\udd15 I used to make a financial plan and I was responsible for paying 6% monthly Interest to investor and then I lost 73.000$ because in 2021 everybody said bitcoin will be 120.000-240.000$ but I decided to sell at the price of 70.000$ but It was not happening. I do not have any team for managing orders exactly and doing base on my good plan. This activity making psychological effects but I tried to get feel better by reading books, meditation, patience, recovery mind so on ... I wonder to let you know 73.000 $ is the value of 2.000.000.000 Rial.it was harmful in situations of unsuited economic in a country. Due to my interest and my experience with the Blockchain these things will still be worth something when I have finished paying off the debt \"To everyone who finds the current investment climate hard, diffcult, and somewhat confusing, I would say, 'Welcome to adult life.'\" - [[Charlie Munger]]","title":"Experience loss of money because of trading crypto in 2021 \ud83e\udd15"},{"location":"public/mynotes/exp-2021cryprotrading/#experience-loss-of-money-because-of-trading-crypto-in-2021","text":"I used to make a financial plan and I was responsible for paying 6% monthly Interest to investor and then I lost 73.000$ because in 2021 everybody said bitcoin will be 120.000-240.000$ but I decided to sell at the price of 70.000$ but It was not happening. I do not have any team for managing orders exactly and doing base on my good plan. This activity making psychological effects but I tried to get feel better by reading books, meditation, patience, recovery mind so on ... I wonder to let you know 73.000 $ is the value of 2.000.000.000 Rial.it was harmful in situations of unsuited economic in a country. Due to my interest and my experience with the Blockchain these things will still be worth something when I have finished paying off the debt \"To everyone who finds the current investment climate hard, diffcult, and somewhat confusing, I would say, 'Welcome to adult life.'\" - [[Charlie Munger]]","title":"Experience loss of money because of trading crypto in 2021 \ud83e\udd15"},{"location":"public/other/2021-year-review/","text":"Joe Previte See all posts 2021 Year in Review Last updated: 01/06/2022 2021 This year feels like a blur. I keep thinking 2021 and 2020 were actually the same year due to the pandemic. 2020 was a wild year because I joined Facebook/Meta, moved the entire family to Seattle, moved back to Arizona, left Facebook/Meta, bought a house and started at Coder. Even writing that last sentence feels tiring. There was a lot happening. But fast-forward to 2021 and it was actually a wonderful year. Working Full-Time on Open Source for Coder I joined Coder in December 2020 as an Open Source TypeScript Engineer. My responsibility was and still is to maintain an open source project called code-server, which is VS Code in the browser. I feel very grateful to have this job and work on open source every day. My work is all public on GitHub and anyone can go see it. And I get to interact with the community on a regular basis. Sometimes people help us debug issues. Other times they raise PRs and fix issues for us. It\u2019s amazing! And I\u2019ve really been enjoying my time at Coder. It\u2019s one of the first places where I look forward to going to work and I\u2019m learning new things everyday. I would say I looked forward to work 90% of the year. Yes, I had bad days. But I also have many many days where I am thinking about work on the weekend because I\u2019m so excited about this space. DevTools, specifically IDEs, is an exciting space. I do genuinely believe remote development is the future and I\u2019m happy I get to contribute to it. Becoming a Dad The other amazing part of the year was becoming a dad! In October, our first daughter (and first kid) was born. I really didn\u2019t know what to expect becoming a parent, but now I\u2019m starting to understand what it means. The biggest realization is how much attention I paid to things that don\u2019t matter before she was born. Now, I realize all I want is to take care of my family (wife, daughter and two dogs) and have a job that I enjoy. That\u2019s basically it. Everything else is icing on the cake. I also have a ton of respect for single parents. How do you do it?! I could never. It takes a village to raise a child. Thankfully we have lots of family here in Arizona to help us. 2021 Highlights Here are some of my other highlights for the year: attempted my first SaaS started livestreaming on Twitch 3,174 GitHub Contributions $36,942.02 in side income revenue 119 hours in the gym, 208 workouts, 1,774,602lbs lifted Goals for 2022 I try to practice systems over goals but I have 3 main things I\u2019m focusing on for 2022. Be the Best Dad and Husband I feel very fortunate that we had our first baby in 2021. Now I want to do everything I can to be the best dad for her and the best husband for my wife. I will be mindful when I\u2019m with them. Protect them, love them and take care of them. One of this biggest things I\u2019d like to do is generate wealth so they have long-term financial support. Since I\u2019m the breadwinner in the family, I\u2019d like to earn and save enough so that if something terrible happens, money isn\u2019t an issue for them. Launch TS Course I launched my first course - Vim for VSCode - in 2020. I started working on a TypeScript course in 2021. In 2022, I will partner with egghead and launch the TypeScript course. The goal is to have industry-level impact akin to Testing JavaScript or Epic React. Double Side-Project Income (> $50k) I\u2019d like to double my side-project income. On the low-end, it should be over $50k. To actually double it though, it should be closer to $75k. I plan to do this through my courses (Vim & TypeScript) and job board & job referrals. We\u2019ll see. It feels like I\u2019m shooting for the moon, but it can\u2019t hurt to try. Conclusion That\u2019s all! Thanks for reading. If you have questions or comments, or just want to say hey, shoot me a DM on Twitter! Join the Newsletter I send a monthly newsletter with 1 exciting thing, 1 helpful thing, and new jobs. Email* awesomeperson@gmail.com By subscribing, you agree with Revue\u2019s Terms of Service and Privacy Policy. \u00a9 2022 Joe Previte","title":"2021 year review"},{"location":"public/other/Charlie%20Munger/","text":"","title":"Charlie Munger"},{"location":"public/other/learn-quickly/","text":"How to Learn Quickly Last updated: 07/09/2020 A few months back, I set out a goal to learn TypeScript deeply in 3 months and I did it. Since then, others have asked how they can do the same. The outcome is a result of using something that I like to call the Fast Framework. This guide will teach you how you can use it to learn anything quickly. Imagine you\u2019re in racing a car. Your goal is to cross the finish line. Taking this analogy, we break the framework into three phases: Make your Map Stay on Track Cross the Finishline In each phase, I\u2019ll cover different aspects that will help you learn fast and reach your goal. I\u2019ll use learning TypeScript as the example. The first phase will cover the foundation for your learning project. Think of this as vision, timeframe, timeline, and organization. In the phase after, the focus will be staying on track and I\u2019ll discuss aspects related to accountability, momentum, sharing, and focus. In the final phase of the journey, the goal is to finish strong and cross the finishline. There, I\u2019ll talk about practice, confidence, vocabulary, and depth. Make your Map The first step is to make your map. This will help answer questions like: What does it mean to \u201clearn [insert thing]\u201c? How long will the project take? What are the expected outcomes? How am I going to organize my learning project? Write a Clear Vision For the vision, define your project and use the Objective Key Results (OKRs) framework. If you aren\u2019t familiar, this was popularized by the book \u201dMeasure What Matters\u201d and is used at companies like Google and Intuit. First, define what you expect to achieve. In my TypeScript learning project, I wrote: Learn TypeScript deeply and become the [Company] \u201cin-house expert\u201d That will be your Objective. Next, figure out how you\u2019re going to measure it. We refer to these as the Key Results. Continuing with my previous project, I wrote: Read \u201cProgramming TypeScript\u201d by Boris Cherny Read the Official TypeScript Handbook Produce small code examples for all concepts Contribute to TypeScript, the language Contribute to typescript-cheatsheets/react-typescript-cheatsheet Don\u2019t rush through this part. Spend some time thinking about your objective and what you need to achieve to get there. Completing your key results should allow you to confidently say you\u2019ve completed your objective. With this vision in mind, you now have clarity on it means when you say \u201clearn [X]\u201d and you know what you expect to achieve. Establish a Timeframe You don\u2019t want to be racing on this map forever. You need to be realistic and ask yourself how much time you have for this. Estimating time to complete tasks is hard. You can use what I like to call the Timeframe Formula: Take the length of months you want to work on this, multiple by 4 to give the amount in weeks. Then multiple it by the number of hours per week that you want to dedicate. For example, when I did a similar project, I gave myself 3 months with 8 hours per week. Using the Timeframe Formula, you get: 3 months x 4 weeks/month x 8 hours/week = 96 hours total. You now have your timeframe. Use this to set expectations on how much time you plan to dedicate each week. Build a Timeline The next thing you need to add to your map is a timeline. Think of this as a week by week calendar. The timeframe answers the question of how long and the timeline answers the what will I do each week. It helps you think less because you will already know what to do for that week. It won\u2019t be perfect. You may need to readjust, but you will have removed friction. An example: Week 1 (June 1) Programming TypeScript Chapter 1 - Introduction Chapter 2 - TypeScript: a 10_000 foot view Book exercises Chapter 3 - All About Types Book exercises Official TypeScript Handbook Basic Types Variable Declarations You know yourself best. Think back to the Timeframe Formula. The example estimated 8hrs/week and 12 weeks in total. Knowing how fast you work (i.e. read, code, etc.), you would adjust accordingly. A complete timeline would have all the weeks filled out. Two important tips: Leave ~10% buffer towards the end Give yourself some breathing room Life comes up and you may fall behind. That\u2019s where the buffer comes in! Some weeks, you may find that you complete everything in 6 hours. No need to fill those two other hours if you don\u2019t want to. Reward yourself with rest. With a timeline, you are good to go! Keep it Organized You want to stay organized on this journey. That means a place to keep track of your timeline, log any notes or things you learn, and have visual indicators for the progress you\u2019re making. I use Notion for this because it supports project management well. I make a place for the project. I add the timeline and use checkboxes. Then, I check them off as I go and take notes as I\u2019m learning. Here is a non-exhaustive list of tools you might want to check out: Notion Trello Asana GitHub Projects Basecamp You could also use an analog tool such as a pen and paper. Stay on Track Now that we have our map, we are ready for the next phase: stay on track. In this phase, the goal is to focus on developing the systems that will help you stay accountable, build momentum, share with others and, stay focused. Keep Yourself Accountable You always want to stay accountable for your project. Think of this as your race crew. They make sure you\u2019re fueled, your tires are rotated, you\u2019re hydrated, and you\u2019re ready to finish the race. We want a similar type of support and accountability. It could be: a group of friends a family member a friend online All you need is at least one person with whom you can share updates. They don\u2019t have to know TypeScript or even know how to code. But they do need to be someone with whom you can check-in regularly. For TypeScript, I recommend looking for 2-3 people who will join you in your TypeScript journey. I would post: on Twitter, using the #100DaysOfCode or #CodeNewbie hashtags on Dev.to, using the #typescript and #discuss tags to start a discussion and share your project on the TypeScript Discord For your own project, come up with a similar list of options. Explore them all. See where you find the most success and stick with it. 2-3 people is ideal, but at least 1 other person works fine. Build Momentum You want momentum. Momentum will keep you going on the track and heading towards the finish line. Think small wins, milestones and success spirals. Small wins are the little accomplishments that we oftentimes take for granted. Examples are things like learning a new word or understanding a concept. Celebrate these. Milestones are the next step up. These can either be date-based or achievement-based. Date-based would be hitting the 1-month mark in your 3-month timeframe for your learning project. Achievement-based would be finishing one of your key results. Either way, these are things to be celebrated and help you sustain the momentum. Success spiral is a term I first heard in Motivation Hack by Nick Winter. It\u2019s the idea that you set yourself up for success for starting small and moving outwards, like a spiral. In this case with TypeScript, maybe you say, \u201cI\u2019m going to write one line of TypeScript a day.\u201d Sounds trivial, right? Good, it should. You start there, establish the habit, then build upwards and outwards. Upwards meaning you continue doing it every day. Outwards meaning you increase the lines of code (without losing the habit). Share with Others Yoda quote, \"Always pass on what you have learned.\" One of the most important parts of staying on track is sharing with others and Learning in Public. There are various mediums you can choose from for sharing: Tweets Blog Posts Podcasts Videos Tutorials Courses Any of these ways work - and there are probably more I didn\u2019t list. This will aid your project for a few reasons: Help you retain what you\u2019re learning Build expertise in the area Meet others who are learning When I was learning TypeScript, I tweeted as I learned. Not only did I meet other TypeScript community members, but people corrected me or taught me new things. Towards the end, people started tweeted me asking for TypeScript help. I didn\u2019t always know the answer, but my sharing with others and learning in public helped me build reputation and credibility. I even ended up attracting the attention of an editor for a tech blog who paid me to write a few TypeScript articles. As you can see, it pays to share with others. Keep Your Focus The last piece I want to touch on for staying on track is keeping your focus. To stay on track, you have to keep yourself focused. The first and foremost is limit your focus. Ideally, learning TypeScript is your main focus. I wouldn\u2019t suggest doing this and learning Rust or another language or something else. Keeping your attention on one project increases the likelihood you\u2019ll stay on track. The other thing you might want to try is deep work. An idea by Cal Newport, it\u2019s where you create an environment that lets you focus on that project for a certain amount of time (such as 1 hour or more) without distractions. Figure out when you\u2019re most productive. For me, it\u2019s in the morning before work. I wake up early, go through my routine, and then spend some time learning. Lastly, find tools to help you stay focused. I am a big fan of the Pomodoro Technique. I have an app called Stretchly that reminds me to take a 20-second break every 20 minutes and a 5-minute break every 40 minutes. This allows me to focus for that period and then rest. It then repeats itself like a cycle. Cross the Finishline The last and final leg of this learning journey is cross the finishline. You should make it there and feel accomplished. Here, you want to use systems that will help you practice, build confidence, remember vocabulary, and go for depth. Practice Learning means nothing without practice. With your new TypeScript knowledge, you can build projects or contribute to open source. This is where the application phase of the learning cycle appears. It doesn\u2019t matter what you build, but that the act of building happens. When I was learning, I followed a tutorial to build a tiny compiler. It was written in JavaScript, but I did it in TypeScript. This forced me to figure out things on my own. If you\u2019re learning something related to code, another idea is contributing to open source. Remember our key results? Here\u2019s two of them that apply here: Contribute to TypeScript, the language Contribute to typescript-cheatsheets/react-typescript-cheatsheet For things not related to code, ask yourself, \u201cHow can I practice what I\u2019ve learned?\u201d If you are having trouble, consult your community. Ask on Twitter (people love to share their advice). Practice is where you learn the most. Build Confidence You want to build confidence in whatever you\u2019re learning. This will make you feel comfortable using your new knowledge. In the case of TypeScript, you want to build TypeScript Confidence. There are various ways to do this including: teaching others sharing (as we said before) reviewing what you\u2019ve learned helping others Many of these things translate over to other topics as well. The main thing is to feel confident in using your new skills or knowledge. Don\u2019t Skip Vocab Vocabulary is often overlooked. Don\u2019t skip out on it! It helps build confidence and it will solidify what you know. It\u2019s also a great tool to fight imposter syndrome. Knowing the vocabulary will allow you to build expertise. To learn and remember vocabulary, use a spaced-repetition system such as Anki. I used it with my TypeScript learning project. You can use it to remember things such as: terminology concepts patterns syntax Take the thing you\u2019re learning, break it down into pieces and then build a list of vocabulary or concepts around those. Study these. This will benefit you in the long-run. Go for Depth The last thing in this phase is going for depth. Deep learning leads to deep understanding. There are two techniques you can use to deepen what you learn. The first is called the Feynman Technique. Take a concept you are learning, such as type inference in TypeScript and explain it as you would to a seven-year-old. The idea is that if you can\u2019t do that, you don\u2019t know the concept well enough. Note: the age of the person to whom you\u2019re explaining your learning concept can vary. Focus on being able to explain something you understand to someone with little knowledge or context. The second technique I want to point out is called Ultralearning. In his book, Scott Young explains Ultralearning as, a strategy for aggressive, self-directed learning. \u2014Scott Young Think of it as taking something, being aggressive with how much or how fast you can learn it, and diving deep. You can use this with your learning projects. While you\u2019re learning, take notes of questions you have or concepts you don\u2019t quite understand. Then at the end of your project, see if those questions remain. If they do, start a new learning project and focus on answering those questions. As you can imagine, if you do this with a topic, you\u2019ll have several learning projects and soon start to develop expertise in this subject. It\u2019s very powerful. Summary The most important takeaway is this: use systems to help you learn better and faster. They will serve as your map, keep you on track and help you cross the finishline. If you were to do this with a programming language like TypeScript, you would develop a proficiency, hopefully even expertise in the language. The next steps are to go out and use your new knowledge in the world! See what you can build. Find ways to help other people. And if you\u2019re ambitious, I challenge you to go deeper after you finish your first learning project. Use this framework and do another round of it. See how much you can learn! You\u2019ll never know the opportunities that may show up as a result. Tweak this learning framework to your liking and try it out on other projects - even non-technical ones. Adjust as needed. See how it works. Special thanks to my friends Sean, swyx, and Prince for reviewing and giving feedback.","title":"Learn quickly"},{"location":"public/other/main/","text":"roadmap 2021-year-review uses learn-quickly outer-links","title":"Main"},{"location":"public/other/outer-links/","text":"Links Last updated: 09/19/2021 These are all the important links you should know about. Featured Streaming on Twitch - I stream about webdev, indie hacking and web3. Vim for VSCode - hands-on course that teaches you how to use Vim inside VSCode Joe\u2019s Jobs - my job board which has the best jobs in product, engineering, OSS and more. New roles drop every Tuesday. dip.chat - accountability groups for developers Basics of TypeScript - this is a weekly Telegram newsletter, but will eventually be a TypeScript course monthly newsletter - related to programming and learning. I also share goodies and deals here. I\u2019m also actively seeking out companies that are interested in collaborating. If that\u2019s you, DM me on Twitter or shoot me an email joe at this domain. Other Things I\u2019ve done in the past that may be of interest to you: The Beginner\u2019s Guide to Figma - pro course on egghead Shareable Custom Hooks in React - pro course on egghead","title":"Outer links"},{"location":"public/other/roadmap/","text":"I had a lot of fun making this a challenge for myself! I feel more motivated to continue contributing to Rust OSS What\u2019s next? Next up in my Ultralerning Plan is to: build and ship a small project in Rust I already built a small temperature converter suggested by the Rust Lang Book at the end of Chapter 3. However, for this particular goal, I assigned myself the task to \u201cBuild a small web server app (bunny1 clone).\u201d I already started on the project and have made solid progress. I still need to refactor a few pieces and ship it. After, I\u2019ll share a blog post about how I built it and a link so you can check it out. Thanks for reading! Happy coding my fellow Rustaceans! \ud83e\udd80","title":"Roadmap"},{"location":"public/other/uses/","text":"One of my favorite things to share with others is setups! It\u2019s fun to see what others use and share my own setup. To make things easier, I\u2019ve broken it into two categories: gear and software. Gear This is a mix of personal and work gear. Some I bought myself (new or used) and other parts were paid for by my company. Desk Setup Here is everything related to how my desk is set up at home. Desk I use a standing desk, specifically the Autonomous SmartDesk2 - Home Office. Chair With a work stipend, I purchased an Autonomous ErgoChair 2. Laptop For work, I have a MacBook Pro 16-inch and at home, I use an iMac or a 13-inch MacBook. Laptop Stand At home, I\u2019m usually working with one monitor (laptop) so I use a laptop stand to not have to bend over. I invested in the Roost a while back. It\u2019s a bit overpriced, but lightweight and does the job. Now, I might look at one of the competitors if I were to buy one today. Keyboard I switch between an Apple Magic Keyboard (personal) and a Kinesis Freestyle Edge (work). The Edge is a split keyboard and I am a huge fan! Mouse I switch between an Apple Magic Trackpad (personal) and an MX Logitech Vertical Mouse (work). Microphone I use Shure BETA 87A (thanks to my friends at egghead). Microphone Boom Arm I started streaming for work so I invested in a boom arm and went with the Rode PSA1. Big fan! Webcam Part of what I do for work is record videos so they let me buy a new webcam: Logitech BRIO. I am very happy with it! Works well for streaming and video meetings. Streamdeck Again, I stared streaming for work so they let me buy an Elegato Stream Deck 15-key. Software Most of this is software I use to work efficiently and productively. I\u2019ve switched back and forth between a lot of tools, but this is what I\u2019m using currently. Editor and Terminal IDE I switched from Sublime to VS Code years ago and I can\u2019t see myself going back. I used to use the Sublime keybindings in VS Code. However, last year I switched to the Vim keybindings. It took some time to reach the same speed, but I would say I\u2019ve surpassed my previous speed and added a few new tricks thanks to Vim. Terminal I use iTerm2. A friend told me about it a while ago. I switched to it and haven\u2019t looked back. Theme I switch between themes. Right now, I\u2019m using Noctis and happy with it. zsh and prezto I use zsh and prezto on top of that. Starship I found this by luck while exploring Rust. If anything, it lets you easily customize emojis used within your terminal for different programs. Productivity Random desktop apps that I use for productivity or other reasons. Notion I am HUGE Notion fan! I pay for the personal plan to get unlimited blocks and use it both for personal and work. I use it for task/project management and structure it using the P.A.R.A. method. Trello Trello has a special place in my heart. I have a few boards to keep track of project ideas and other personal stuff. ScreenFlow Similar to the microphone from egghead, I use ScreenFlow to record and edit my videos (mostly screencasts). Gifox 2 For PRs and showing things to friends or coworkers, I use Gifox 2. I paid for the pro version and use it on both my personal and work machine. Stretchly Stretchly is a handy app for reminding me to take breaks. Clippy or Flycut A coworker once told me about his clipboard history app. I thought it was genius and since then have used both Flycut and Clippy. Alfred As of writing this, I haven\u2019t caved to buy the Alfred Powerpack (though I may\u2026), I mainly use it because it\u2019s faster than Spotlight on macOS and does some cool things like let you shutdown your mac by typing \u201cshutdown.\u201d Rocket I like emojis a lot. I bought Rocket and am a huge fan. Flux Although maOS now has a built-in dimming feature, I don\u2019t find it to be as great as Flux so I use Flux to dim my screen/remove bluelight as the sunsets. Keeping You Awake Keeping You Awake is a fantastic app for preventing your mac from going to sleep. Spectacle and Rectangle For window management, I use Spectacle (personal) or Rectangle (work).","title":"Uses"},{"location":"public/referenced/Advocate/","text":"","title":"Advocate"},{"location":"public/referenced/AngularJs/","text":"","title":"AngularJs"},{"location":"public/referenced/CMS/","text":"","title":"CMS"},{"location":"public/referenced/CRM/","text":"","title":"CRM"},{"location":"public/referenced/Cloudsim/","text":"","title":"Cloudsim"},{"location":"public/referenced/Customer/","text":"","title":"Customer"},{"location":"public/referenced/Payment/","text":"","title":"Payment"},{"location":"public/referenced/Report/","text":"","title":"Report"},{"location":"public/referenced/SPA/","text":"","title":"SPA"},{"location":"public/referenced/Senior/","text":"","title":"Senior"},{"location":"public/referenced/VSphere/","text":"","title":"VSphere"},{"location":"public/referenced/WebApi/","text":"","title":"WebApi"},{"location":"public/referenced/Workflow/","text":"","title":"Workflow"},{"location":"public/referenced/gallery/","text":"","title":"Gallery"},{"location":"public/rust/main/","text":"rust-lang rust-lang-ecosystem rust-lang-ecosystem","title":"Main"},{"location":"public/rust/rust-lang-ecosystem/","text":"Understanding the Rust Ecosystem Last updated: 06/15/2020 Rust, a systems-programming language, which prides itself on being Stack Overflow\u2019s \u201c most loved language for five years in row \u201d and GitHub\u2019s second fastest growing (235% 2018-2019) has gained popularity both at companies like Amazon, FB, Discord and externally within the programming community. For part of my job, I have been focused on developing my own understanding of the space. I work within the DevTools pillar and focus primarily on programming languages. My main priority for H1 of 2020 has been Rust. The goal of this article is: To paint a high-level overview of the ecosystem The article covers various aspects of the ecosystem including community, companies using the language, selling points, etc. Overview One of the hardest parts of understanding a programming language is setting the boundaries for what you encapsulate as part of and not part of the ecosystem. I gathered input coworkers and mentors in order to set the criteria for this project. For our purposes, I choose to limit it to the following areas, which you\u2019ll see below. For each section, you can expect: A brief description of how I defined the section Key highlights from the ecosystem for that area of the ecosystem Academic Research Things that fall under this category might be research papers, academic presentations, and anything related. It was difficult to find much in this area, but here are a few highlights: Memory-Safety Challenge Considered Solved? An Empirical Study with All Rust CVEs What can the programming language Rust do for astrophysics? RustBelt: Securing the Foundations of the RustProgramming Language Rust-Like Borrowing with 2nd-Class Values (Short Paper) Safe Systems Programming in Rust:The Promise and the Challenge Fearless Concurrency? Understanding Concurrent Programming Safety in Real-World Rust Software As you can tell from skimming the headings, researchers are looking at Rust\u2019s use cases, security, memory management, type-safety and concurrency. It\u2019s unfortunate there isn\u2019t an easy way to stay on top of academic research within Rust. Demographics When you look at the programming language, how do you know who is using it? What industries do they work in? Fortunately, the Rust Survey 2019 Results provides insight related to demographics. Based on the results, here are the key highlights: Respondents\u2019 top five languages: English, Chinese, German, French and Japanese Top five industries using Rust: Backend Web Applications, Distributed Systems, Embedded Devices, IT and Network Programming Top three titles for Rust users: Programmer/Software Engineer, Systems Architect, Web Developer/Front End Developer It\u2019s unfortunate that we do not have more information related to demographics such as gender, ethnicity, race, etc. There was an attempt to gather some of this information in the 2016 survey . Know that this section contains a small glimpse into the people of the Rust and is far from complete or representative of the ecosystem. Community Community itself is a huge category. I tried my best to break it into subcategories for things that might fit here. In general, think of this area as the various places where members of the community congregate (online and in-person), groups who write code, and foundations. These are a combination of chat platforms, but also places where updates are shared with the community. Here are some worth noting: Chat Platforms Discord (35,597 members total) The Rust Programming Language (25,135 members) Rust Programming Language Community Server (10,462 members) Rust lang Slack (3,046 people) Rust Team Zulip (655 people) (mainly focused on people who work on Rust itself) Conferences FOSDEM RustConf Rusty Days RustFest Netherlands Rust + GNOME Hackfest Rust Latam RustLab Oxidize List of 2020 events on the Rust lang blog Core contributors Governance - all the different core team members associated with each team GitHub Rustlang org members GitHub committers - over 2k people have contributed to /rust repo Rust team alumni - people who worked on a Rust team previously Forums Users forum (14.2k) Internals forum (6.8k) r/rust -Reddit (100k people) Meetups Stats (meetups with the topic \u201crust\u201d ) 73,706 members 1,749 interested 204 Meetups 145 cities 42 countries Groups (not all listed, some highlights) Desert Rust (Phoenix, AZ) Minneapolis Rust Meetup Rusty Bay Area Meetup Rust Bangalore Rust Berlin Rust in Blockchain Rust Los Angeles Rust London User Group Rust Dev in Mountain View Meetup Rust Denver Rust NYC Rust Nairobi Rust Paris San Diego Rust Seattle Rust Meetup Utah Rust Miscellaneous RFCs (2.9k stars) - where technical decisions are made in regards to Rust This Week in Rust - weekly newsletter Programs Rust\u2019s Reach (currently on hold due to lack of funding and people) - \u201cmentorship like program between participants from URGs and Rust team members\u201d Rust Bridge (1 chapter) - \u201ca workshop focused on getting underrepresented people with a background in another programming language to learn Rust and join the community.\u201d *These stats were taken on 5/19/2020 As you can see, the community category extends itself across many platforms and mediums online. It\u2019s easy to overwhelm oneself with all the places you can go to get involved. The beautiful part is that there is no shortage of finding ways to meet others within the community. *For the data in the \u201cMeetups > Stats\u201d category, you\u2019ll notice that it includes some meetups that are not specifically for Rust so take that number with a grain of salt. Companies It would be impossible to list all the companies that use Rust. This is a sub-selection of notable companies (more well-known) that are using or investing in Rust, ideally along with articles where they share how they\u2019re using it or helping the ecosystem: Amazon AWS is sponsoring the Rust programming language - AWS Open Source Blog (October 2019) \u201c\u2026 AWS staff open-sourced a virtualization technology named Firecracker that was coded primarily in Rust \u201d - zdnet.com article (October 2019) \u201c_As Rust starts to take up a larger chunk of Amazon\u2019s backend code, the company is making sure the project has the means to continue to evolve and fix security issues.\u201d _-_ _ zdnet.com article (October 2019) AWS sponsors RustConf - AWS Open Source Blog (2018 - 2020) Apple Rust for server-side Linux on Apple Cloud Traffic (March 2020) Atlassian (makers of Jira) Use Rust in the backend for analyzing terabytes of source code Cloudflare Cloudflare uses Rust in production for WebAssembly edge computing as well as a lot of foundational infrastructure (2018-2019) Discord \u201cWhy Discord is switching from Go to Rust\u201d - (February 2020) 11.9K claps \u201cUsing Rust to Scale Elixir for 11 Million Concurrent Users\u201d - (May 2019) 6.4K claps Dropbox Dropbox is highlighted on the /production page of the rust-lang.org website - (currently - March 2020) Go-ing to Rust: Optimizing Storage at Dropbox - (November 2017) Dropbox is mentioned on official Rust lang blog - (May 2017) \u201cThe Epic Story of Dropbox\u2019s Exodus From the Amazon Cloud Empire\u201d - (March 2016) Facebook Developers have named Rust their most-loved programming language five years in a row. Here\u2019s why developers at Facebook, Dropbox, and Amazon all adore it - (June 2020) The Relay Team is experimenting with a \u201crewrite of the Relay compiler in Rust\u201d (May 2020) Mononoke, the new Mercurial backend, was written from scratch in Rust GitHub GitHub donating VMs for GitHub Actions (April 2020) Google Rust makes up increasingly large parts of Google\u2019s Fuchsia operating system Chrome OS\u2019s virtualization infrastructure and several other components are in Rust Android uses Rust Chromium is beginning to adopt Rust Google released an \u201cunofficial\u201d project called [tarpc](https://github.com/google/tarpc) \u201cAn RPC framework for Rust\u201d Microsoft Microsoft featured on /sponsors page \u201cMicrosoft opens up Rust-inspired Project Verona programming language on GitHub\u201d - (Jan 2020) \u201cMicrosoft looks to Rust language to beat memory vulnerabilities\u201d - (Dec 2019) \u201cMicrosoft Exploring Rust as the Solution for Safe Software\u201d - (Nov 2019) Azure Pipelines sponsoring Rust - (Oct 2019) Microsoft looking into Rust for security reasons . - (July 2019) \u201cMicrosoft eyes Mozilla\u2019s Rust to obliterate C++ memory security flaws\u201d - (July 2019) Azure IoT Edge has been using Rust since at least 2018 Mozilla Rust is used in Firefox through a project called Oxidation Mozilla is writing a browser written in Rust called Servo \u201cRust 2018 is here\u2026 but what is it?\u201d - (Dec 2018) \u201cMozilla binds Firefox\u2019s fate to the Rust language\u201d - (Feb 2017) \u201cProject for porting C to Rust gains Mozilla\u2019s backing\u201d - (Oct 2016) npm Performance critical registry service architecture is Rust Reddit Uses Rust for comment processing Twitter Build team has been using Rust in production for ~3 years and intend for it to make up a large portion of their codebase going forward Yelp Yelp is featured under the \u201cRust in production\u201d section of rust-lang.org , they talk about how they use it in this talk - (Aug 2018) Honorable Mentions There is a list of production users on the rust-lang.org website \u201cA Snapshot of Rust\u2019s Popularity in July 2018\u201d Nike using Rust Language Think core library, compiler, type system. Basically all the code that makes up the language and some of the tools that help with writing code in Rust. Books & References Asynchronous Programming In Rust Book Command Line Applications in Rust The Rust Programming Language Book The Cargo Book - info about the rust package manager The Rustonomicon Book - the dark arts of unsafe Rust The Rust Reference Book Rust Compiler Error Index - book on all the rust compiler errors rustdoc Book - all about rustdoc and writing documentation in Rust std - standard library docs Code & DevTools Cargo the package manager + build system Core language Rust-clippy - official linter Rustfmt - official formatter rustc - the Rust compiler (inside the core language) Language Frameworks What would a programming language be without frameworks? Thankfully, the community resource rust-web-framework-comparison made this research easy. Here is a long list: Client frameworks actix-web ( homepage / repository / api docs ) reqwest (- / repository / documentation ) hyper ( homepage / repository / documentation ) jsonrpc (- / repository / documentation ) Frontend frameworks (WASM) stdweb ( - / repository / documentation ) A standard library for the client-side Web yew ( homepage / repository / documentation ) - A frontend framework inspired by Elm and React (based on stdweb) percy ( homepage / repository / - ) - A modular toolkit for building isomorphic web apps seed ( homepage / repository / - ) - A Rust framework for creating web apps draco ( - / repository / documentation ) - A frontend framework inspired by Redux and Elm smithy ( homepage - / repository / - documentation ) - A front-end framework squark ( - / repository / documentation ) - Rust frontend framework, for web browser and more. willow ( homepage - / repository / - ) - A frontend framework inspired by Elm dodrio ( - / repository / documentation ) - A fast, bump-allocated virtual DOM library. dominator ( - / repository / documentation - Zero cost declarative DOM library using FRP signals for Rust!. mika ( homepage / repository / - ) - A signal-based framework for building front-end app, it tries to help, but may cause annoyances. Server frameworks actix-web ( homepage / repository / documentation / user guide ) gotham ( homepage / repository / documentation / examples ) iron ( homepage / repository / documentation ) nickel ( homepage / repository / documentation ) rocket ( homepage / repository / documentation ) rouille ( - / repository / documentation ) Thruster ( - / repository / documentation / examples ) Tide ( - / repository / documentation / examples ) tower-web ( - / repository / documentation / examples ) warp ( - / repository / documentation / examples ) Static site generators zola ( homepage / repository / documentation ) Templating frameworks tera ( homepage / repository / documentation ) mustache (- / repository / documentation ) liquid (- / repository / - ) handlebars (- / repository / documentation ) horrorshow (- / repository / documentation ) maud ( homepage / repository / documentation ) askama (- / repository / documentation ) stpl (- / repository / - ) ructe (- / repository / documentation ) typed-html (- / repository / documentation ) Websocket frameworks websocket ( homepage / repository / documentation ) ws-rs ( homepage / repository / documentation ) tungstenite ( - / repository / documentation ) actix-web ( homepage / repository / documentation ) Again, this is a bit overwhelming for a new person learning Rust. It\u2019s difficult to know what to choose. However, it\u2019s also a benefit having the ability to try out various solutions and see what works best. Learning Similar to the Community category, learning can be quite difficult to narrow down. I have tried my best to highlight the main areas and a few examples for each category. Know that this list is non-exhaustive and more a brief survey into this area of the ecosystem. Articles A collection of notable Rust bloggers Each week, This Week in Rust shares articles Fearless Rust Bloggers Learning Rust - Pascal Precht Read Rust - Rust blog post aggregator Writing an OS in Rust Books Programming Rust - O\u2019Reilly Media Rust in Action - Manning Bootcamps No response on Rust users forum No response on Twitter NobleProg Rust microcourse Classes (specifically academic, in universities) Northwestern University Rust being taught at University of Maryland, College Park Stanford\u2019s Programming Languages course dedicates 3.5 weeks to Rust Stanford\u2019s Operating Systems course in Rust University of Pennsylvania University of Virginia (first class) Tutorials Rustlings - Small exercises to get you used to reading and writing Rust code rust-learning - detailed list of awesome learning materials Tour of Rust - Step by step guide through the features of the Rust programming language Courses Intro to Rust - YouTube Rust Crash Course - YouTube Rust Projects - YouTube The Rust Programming Language - Udemy Using Web Assembly with Rust - egghead Write your First Program with Rust - egghead Videos Learning Rust - two people pair-programming and going chapter by chapter through the Rust Lang Book Into_rust - screencast series Workshops Ferrous Systems - paid workshops for companies and teams RustBridge - an organization that is part of the official Rust group. Systems Programming with Rust (at a conference) Packages One of the most important aspects of a programming language ecosystem is a way to share code with others. In the Rust ecosystem, the most common way is through packages, more commonly referred to as \u201ccrates\u201d. Below are links to two places where you can share code (your own private registry or the public one): Cloudsmith - create your own private cargo registry crates.io - \u201cThe Rust community\u2019s crate registry\u201d libs.rs - \u201cFast, lightweight, opinionated, unofficial alternative to crates.io\u201d Platforms The objective for this section was to figure out where Rust code can run. What platforms or systems are people targeting or building for? We saw a few of these mentioned in the Frameworks section. Here are the most common ones I could find (and some examples): Browser WebAssembly Wasm-bindgem Rust to WASM + Next CLI Apps clap Build binaries for Linux, macOS and Windows Embedded Devices https://www.rust-lang.org/what/embedded Operating System Writing an OS in Rust Mobile Apps Building an iOS App in Rust, Part 1: Getting Started with Rust Example project for building a library for iOS + Android in Rust Server Deploying to Heroku Anywhere? Rust Once, Run Everywhere Selling Points Everyone will have their favorite reasons for using one language over another. I tried to select articles related to the selling points, but also highlight features of the language brought up by people who advocate for it. Articles How often does Rust change? Rust programming language: Seven reasons why you should learn it in 2019 What is Rust and why is it so popular? Why Rust? Why should I use Rust? Features Borrow checker (\u201c Rust has a static garbage collector \u201d) Community Ownership model Package manager Performance Productivity Excellent documentation Built-in tools (cargo, fmt, clippy) Smart memory-management Type system Other Used by big companies (talk about Facebook, Microsoft, Amazon, etc.) *Note: this section also piggybacks off the Use Cases section (coming up). Beyond this, I would encourage you to read the results from the Rust 2019 survey which asked \u201cWhy not use Rust\u201d . Not all points relate to selling points, but it may provide insight into what would sell people on using Rust if these things were fixed. Tools The tools used for writing and using the programming language is an aspect we sometimes forget. This affects the developer experience and can drive or hinder the ecosystem. Here are some highlights: Benchmarking criterion - Statistics-driven Microbenchmarking Built-in testing support Cargo Build (macOS, Windows, Linux) Clippy Rustdoc rustfmt IDE support https://www.rust-lang.org/tools Hover over documentation in editor Rust Playground - test code online, share with others Use Cases Deriving some of the tops results from the Rust Survey 2019 , here are the main industries/applications that responded in the survey and are using Rust: Top 10 from survey Backend Web Applications Distributed Systems Embedded Devices Enterprise Software Frontend Web Applications Internet of Things IT Network Programming Security Technology Other Blockchain ( Libra Move ) Solana Deno - uses JavaScript engine written in Rust 1.0 Announcement Summary Reflecting on what we have covered thus far, we can see that the Rust ecosystem is well-developed and growing. This is not a conclusive/comprehensive list of the ecosystem or the companies using it. From my knowledge, Rust is used at big companies such as Amazon, Apple, Microsoft and Google. They are all investing in the language. We\u2019ve covered the ecosystem from a bird\u2019s-eye view as we see it today. Here are the main things to walk away with: Overview The community is ubiquitous both online and in-person There is no shortage of books or references to read from the official Rust groups Rust can be used for writing web, mobile, and CLI apps, servers embedded devices, and OS\u2019s Rust is fast, well-documented, type-safe, manages memory efficiently, but has a steep learning curve What\u2019s next? We plan to use this information when making decisions and building strategies for us to get involved with the Rust ecosystem. If you\u2019d like to collaborate with us, please reach out to me over DMs on Twitter ! We would love to work with you. Thank you for reading! Thank you To close out, I\u2019d like to give thanks to the following people for their contributions and feedback. I appreciate all of you! David Tolnay Pedro Rittner Jk Jensen Joe Savona Nell Shamrell-Harrington Lauren Tan Kathy Kam Cami Williams Joel Marcey Join the Newsletter I send a monthly newsletter with 1 exciting thing, 1 helpful thing, and new jobs. Email* By subscribing, you agree with Revue\u2019s Terms of Service and Privacy Policy . \u00a92022 Joe Previte","title":"Rust lang ecosystem"},{"location":"public/rust/rust-lang-ecosystem/#understanding-the-rust-ecosystem","text":"Last updated: 06/15/2020 Rust, a systems-programming language, which prides itself on being Stack Overflow\u2019s \u201c most loved language for five years in row \u201d and GitHub\u2019s second fastest growing (235% 2018-2019) has gained popularity both at companies like Amazon, FB, Discord and externally within the programming community. For part of my job, I have been focused on developing my own understanding of the space. I work within the DevTools pillar and focus primarily on programming languages. My main priority for H1 of 2020 has been Rust. The goal of this article is: To paint a high-level overview of the ecosystem The article covers various aspects of the ecosystem including community, companies using the language, selling points, etc.","title":"Understanding the Rust Ecosystem"},{"location":"public/rust/rust-lang-ecosystem/#overview","text":"One of the hardest parts of understanding a programming language is setting the boundaries for what you encapsulate as part of and not part of the ecosystem. I gathered input coworkers and mentors in order to set the criteria for this project. For our purposes, I choose to limit it to the following areas, which you\u2019ll see below. For each section, you can expect: A brief description of how I defined the section Key highlights from the ecosystem for that area of the ecosystem","title":"Overview"},{"location":"public/rust/rust-lang-ecosystem/#academic-research","text":"Things that fall under this category might be research papers, academic presentations, and anything related. It was difficult to find much in this area, but here are a few highlights: Memory-Safety Challenge Considered Solved? An Empirical Study with All Rust CVEs What can the programming language Rust do for astrophysics? RustBelt: Securing the Foundations of the RustProgramming Language Rust-Like Borrowing with 2nd-Class Values (Short Paper) Safe Systems Programming in Rust:The Promise and the Challenge Fearless Concurrency? Understanding Concurrent Programming Safety in Real-World Rust Software As you can tell from skimming the headings, researchers are looking at Rust\u2019s use cases, security, memory management, type-safety and concurrency. It\u2019s unfortunate there isn\u2019t an easy way to stay on top of academic research within Rust.","title":"Academic Research"},{"location":"public/rust/rust-lang-ecosystem/#demographics","text":"When you look at the programming language, how do you know who is using it? What industries do they work in? Fortunately, the Rust Survey 2019 Results provides insight related to demographics. Based on the results, here are the key highlights: Respondents\u2019 top five languages: English, Chinese, German, French and Japanese Top five industries using Rust: Backend Web Applications, Distributed Systems, Embedded Devices, IT and Network Programming Top three titles for Rust users: Programmer/Software Engineer, Systems Architect, Web Developer/Front End Developer It\u2019s unfortunate that we do not have more information related to demographics such as gender, ethnicity, race, etc. There was an attempt to gather some of this information in the 2016 survey . Know that this section contains a small glimpse into the people of the Rust and is far from complete or representative of the ecosystem.","title":"Demographics"},{"location":"public/rust/rust-lang-ecosystem/#community","text":"Community itself is a huge category. I tried my best to break it into subcategories for things that might fit here. In general, think of this area as the various places where members of the community congregate (online and in-person), groups who write code, and foundations. These are a combination of chat platforms, but also places where updates are shared with the community. Here are some worth noting: Chat Platforms Discord (35,597 members total) The Rust Programming Language (25,135 members) Rust Programming Language Community Server (10,462 members) Rust lang Slack (3,046 people) Rust Team Zulip (655 people) (mainly focused on people who work on Rust itself) Conferences FOSDEM RustConf Rusty Days RustFest Netherlands Rust + GNOME Hackfest Rust Latam RustLab Oxidize List of 2020 events on the Rust lang blog Core contributors Governance - all the different core team members associated with each team GitHub Rustlang org members GitHub committers - over 2k people have contributed to /rust repo Rust team alumni - people who worked on a Rust team previously Forums Users forum (14.2k) Internals forum (6.8k) r/rust -Reddit (100k people) Meetups Stats (meetups with the topic \u201crust\u201d ) 73,706 members 1,749 interested 204 Meetups 145 cities 42 countries Groups (not all listed, some highlights) Desert Rust (Phoenix, AZ) Minneapolis Rust Meetup Rusty Bay Area Meetup Rust Bangalore Rust Berlin Rust in Blockchain Rust Los Angeles Rust London User Group Rust Dev in Mountain View Meetup Rust Denver Rust NYC Rust Nairobi Rust Paris San Diego Rust Seattle Rust Meetup Utah Rust Miscellaneous RFCs (2.9k stars) - where technical decisions are made in regards to Rust This Week in Rust - weekly newsletter Programs Rust\u2019s Reach (currently on hold due to lack of funding and people) - \u201cmentorship like program between participants from URGs and Rust team members\u201d Rust Bridge (1 chapter) - \u201ca workshop focused on getting underrepresented people with a background in another programming language to learn Rust and join the community.\u201d *These stats were taken on 5/19/2020 As you can see, the community category extends itself across many platforms and mediums online. It\u2019s easy to overwhelm oneself with all the places you can go to get involved. The beautiful part is that there is no shortage of finding ways to meet others within the community. *For the data in the \u201cMeetups > Stats\u201d category, you\u2019ll notice that it includes some meetups that are not specifically for Rust so take that number with a grain of salt.","title":"Community"},{"location":"public/rust/rust-lang-ecosystem/#companies","text":"It would be impossible to list all the companies that use Rust. This is a sub-selection of notable companies (more well-known) that are using or investing in Rust, ideally along with articles where they share how they\u2019re using it or helping the ecosystem: Amazon AWS is sponsoring the Rust programming language - AWS Open Source Blog (October 2019) \u201c\u2026 AWS staff open-sourced a virtualization technology named Firecracker that was coded primarily in Rust \u201d - zdnet.com article (October 2019) \u201c_As Rust starts to take up a larger chunk of Amazon\u2019s backend code, the company is making sure the project has the means to continue to evolve and fix security issues.\u201d _-_ _ zdnet.com article (October 2019) AWS sponsors RustConf - AWS Open Source Blog (2018 - 2020) Apple Rust for server-side Linux on Apple Cloud Traffic (March 2020) Atlassian (makers of Jira) Use Rust in the backend for analyzing terabytes of source code Cloudflare Cloudflare uses Rust in production for WebAssembly edge computing as well as a lot of foundational infrastructure (2018-2019) Discord \u201cWhy Discord is switching from Go to Rust\u201d - (February 2020) 11.9K claps \u201cUsing Rust to Scale Elixir for 11 Million Concurrent Users\u201d - (May 2019) 6.4K claps Dropbox Dropbox is highlighted on the /production page of the rust-lang.org website - (currently - March 2020) Go-ing to Rust: Optimizing Storage at Dropbox - (November 2017) Dropbox is mentioned on official Rust lang blog - (May 2017) \u201cThe Epic Story of Dropbox\u2019s Exodus From the Amazon Cloud Empire\u201d - (March 2016) Facebook Developers have named Rust their most-loved programming language five years in a row. Here\u2019s why developers at Facebook, Dropbox, and Amazon all adore it - (June 2020) The Relay Team is experimenting with a \u201crewrite of the Relay compiler in Rust\u201d (May 2020) Mononoke, the new Mercurial backend, was written from scratch in Rust GitHub GitHub donating VMs for GitHub Actions (April 2020) Google Rust makes up increasingly large parts of Google\u2019s Fuchsia operating system Chrome OS\u2019s virtualization infrastructure and several other components are in Rust Android uses Rust Chromium is beginning to adopt Rust Google released an \u201cunofficial\u201d project called [tarpc](https://github.com/google/tarpc) \u201cAn RPC framework for Rust\u201d Microsoft Microsoft featured on /sponsors page \u201cMicrosoft opens up Rust-inspired Project Verona programming language on GitHub\u201d - (Jan 2020) \u201cMicrosoft looks to Rust language to beat memory vulnerabilities\u201d - (Dec 2019) \u201cMicrosoft Exploring Rust as the Solution for Safe Software\u201d - (Nov 2019) Azure Pipelines sponsoring Rust - (Oct 2019) Microsoft looking into Rust for security reasons . - (July 2019) \u201cMicrosoft eyes Mozilla\u2019s Rust to obliterate C++ memory security flaws\u201d - (July 2019) Azure IoT Edge has been using Rust since at least 2018 Mozilla Rust is used in Firefox through a project called Oxidation Mozilla is writing a browser written in Rust called Servo \u201cRust 2018 is here\u2026 but what is it?\u201d - (Dec 2018) \u201cMozilla binds Firefox\u2019s fate to the Rust language\u201d - (Feb 2017) \u201cProject for porting C to Rust gains Mozilla\u2019s backing\u201d - (Oct 2016) npm Performance critical registry service architecture is Rust Reddit Uses Rust for comment processing Twitter Build team has been using Rust in production for ~3 years and intend for it to make up a large portion of their codebase going forward Yelp Yelp is featured under the \u201cRust in production\u201d section of rust-lang.org , they talk about how they use it in this talk - (Aug 2018) Honorable Mentions There is a list of production users on the rust-lang.org website \u201cA Snapshot of Rust\u2019s Popularity in July 2018\u201d Nike using Rust","title":"Companies"},{"location":"public/rust/rust-lang-ecosystem/#language","text":"Think core library, compiler, type system. Basically all the code that makes up the language and some of the tools that help with writing code in Rust. Books & References Asynchronous Programming In Rust Book Command Line Applications in Rust The Rust Programming Language Book The Cargo Book - info about the rust package manager The Rustonomicon Book - the dark arts of unsafe Rust The Rust Reference Book Rust Compiler Error Index - book on all the rust compiler errors rustdoc Book - all about rustdoc and writing documentation in Rust std - standard library docs Code & DevTools Cargo the package manager + build system Core language Rust-clippy - official linter Rustfmt - official formatter rustc - the Rust compiler (inside the core language)","title":"Language"},{"location":"public/rust/rust-lang-ecosystem/#language-frameworks","text":"What would a programming language be without frameworks? Thankfully, the community resource rust-web-framework-comparison made this research easy. Here is a long list: Client frameworks actix-web ( homepage / repository / api docs ) reqwest (- / repository / documentation ) hyper ( homepage / repository / documentation ) jsonrpc (- / repository / documentation ) Frontend frameworks (WASM) stdweb ( - / repository / documentation ) A standard library for the client-side Web yew ( homepage / repository / documentation ) - A frontend framework inspired by Elm and React (based on stdweb) percy ( homepage / repository / - ) - A modular toolkit for building isomorphic web apps seed ( homepage / repository / - ) - A Rust framework for creating web apps draco ( - / repository / documentation ) - A frontend framework inspired by Redux and Elm smithy ( homepage - / repository / - documentation ) - A front-end framework squark ( - / repository / documentation ) - Rust frontend framework, for web browser and more. willow ( homepage - / repository / - ) - A frontend framework inspired by Elm dodrio ( - / repository / documentation ) - A fast, bump-allocated virtual DOM library. dominator ( - / repository / documentation - Zero cost declarative DOM library using FRP signals for Rust!. mika ( homepage / repository / - ) - A signal-based framework for building front-end app, it tries to help, but may cause annoyances. Server frameworks actix-web ( homepage / repository / documentation / user guide ) gotham ( homepage / repository / documentation / examples ) iron ( homepage / repository / documentation ) nickel ( homepage / repository / documentation ) rocket ( homepage / repository / documentation ) rouille ( - / repository / documentation ) Thruster ( - / repository / documentation / examples ) Tide ( - / repository / documentation / examples ) tower-web ( - / repository / documentation / examples ) warp ( - / repository / documentation / examples ) Static site generators zola ( homepage / repository / documentation ) Templating frameworks tera ( homepage / repository / documentation ) mustache (- / repository / documentation ) liquid (- / repository / - ) handlebars (- / repository / documentation ) horrorshow (- / repository / documentation ) maud ( homepage / repository / documentation ) askama (- / repository / documentation ) stpl (- / repository / - ) ructe (- / repository / documentation ) typed-html (- / repository / documentation ) Websocket frameworks websocket ( homepage / repository / documentation ) ws-rs ( homepage / repository / documentation ) tungstenite ( - / repository / documentation ) actix-web ( homepage / repository / documentation ) Again, this is a bit overwhelming for a new person learning Rust. It\u2019s difficult to know what to choose. However, it\u2019s also a benefit having the ability to try out various solutions and see what works best.","title":"Language Frameworks"},{"location":"public/rust/rust-lang-ecosystem/#learning","text":"Similar to the Community category, learning can be quite difficult to narrow down. I have tried my best to highlight the main areas and a few examples for each category. Know that this list is non-exhaustive and more a brief survey into this area of the ecosystem. Articles A collection of notable Rust bloggers Each week, This Week in Rust shares articles Fearless Rust Bloggers Learning Rust - Pascal Precht Read Rust - Rust blog post aggregator Writing an OS in Rust Books Programming Rust - O\u2019Reilly Media Rust in Action - Manning Bootcamps No response on Rust users forum No response on Twitter NobleProg Rust microcourse Classes (specifically academic, in universities) Northwestern University Rust being taught at University of Maryland, College Park Stanford\u2019s Programming Languages course dedicates 3.5 weeks to Rust Stanford\u2019s Operating Systems course in Rust University of Pennsylvania University of Virginia (first class) Tutorials Rustlings - Small exercises to get you used to reading and writing Rust code rust-learning - detailed list of awesome learning materials Tour of Rust - Step by step guide through the features of the Rust programming language Courses Intro to Rust - YouTube Rust Crash Course - YouTube Rust Projects - YouTube The Rust Programming Language - Udemy Using Web Assembly with Rust - egghead Write your First Program with Rust - egghead Videos Learning Rust - two people pair-programming and going chapter by chapter through the Rust Lang Book Into_rust - screencast series Workshops Ferrous Systems - paid workshops for companies and teams RustBridge - an organization that is part of the official Rust group. Systems Programming with Rust (at a conference)","title":"Learning"},{"location":"public/rust/rust-lang-ecosystem/#packages","text":"One of the most important aspects of a programming language ecosystem is a way to share code with others. In the Rust ecosystem, the most common way is through packages, more commonly referred to as \u201ccrates\u201d. Below are links to two places where you can share code (your own private registry or the public one): Cloudsmith - create your own private cargo registry crates.io - \u201cThe Rust community\u2019s crate registry\u201d libs.rs - \u201cFast, lightweight, opinionated, unofficial alternative to crates.io\u201d","title":"Packages"},{"location":"public/rust/rust-lang-ecosystem/#platforms","text":"The objective for this section was to figure out where Rust code can run. What platforms or systems are people targeting or building for? We saw a few of these mentioned in the Frameworks section. Here are the most common ones I could find (and some examples): Browser WebAssembly Wasm-bindgem Rust to WASM + Next CLI Apps clap Build binaries for Linux, macOS and Windows Embedded Devices https://www.rust-lang.org/what/embedded Operating System Writing an OS in Rust Mobile Apps Building an iOS App in Rust, Part 1: Getting Started with Rust Example project for building a library for iOS + Android in Rust Server Deploying to Heroku Anywhere? Rust Once, Run Everywhere","title":"Platforms"},{"location":"public/rust/rust-lang-ecosystem/#selling-points","text":"Everyone will have their favorite reasons for using one language over another. I tried to select articles related to the selling points, but also highlight features of the language brought up by people who advocate for it. Articles How often does Rust change? Rust programming language: Seven reasons why you should learn it in 2019 What is Rust and why is it so popular? Why Rust? Why should I use Rust? Features Borrow checker (\u201c Rust has a static garbage collector \u201d) Community Ownership model Package manager Performance Productivity Excellent documentation Built-in tools (cargo, fmt, clippy) Smart memory-management Type system Other Used by big companies (talk about Facebook, Microsoft, Amazon, etc.) *Note: this section also piggybacks off the Use Cases section (coming up). Beyond this, I would encourage you to read the results from the Rust 2019 survey which asked \u201cWhy not use Rust\u201d . Not all points relate to selling points, but it may provide insight into what would sell people on using Rust if these things were fixed.","title":"Selling Points"},{"location":"public/rust/rust-lang-ecosystem/#tools","text":"The tools used for writing and using the programming language is an aspect we sometimes forget. This affects the developer experience and can drive or hinder the ecosystem. Here are some highlights: Benchmarking criterion - Statistics-driven Microbenchmarking Built-in testing support Cargo Build (macOS, Windows, Linux) Clippy Rustdoc rustfmt IDE support https://www.rust-lang.org/tools Hover over documentation in editor Rust Playground - test code online, share with others","title":"Tools"},{"location":"public/rust/rust-lang-ecosystem/#use-cases","text":"Deriving some of the tops results from the Rust Survey 2019 , here are the main industries/applications that responded in the survey and are using Rust: Top 10 from survey Backend Web Applications Distributed Systems Embedded Devices Enterprise Software Frontend Web Applications Internet of Things IT Network Programming Security Technology Other Blockchain ( Libra Move ) Solana Deno - uses JavaScript engine written in Rust 1.0 Announcement","title":"Use Cases"},{"location":"public/rust/rust-lang-ecosystem/#summary","text":"Reflecting on what we have covered thus far, we can see that the Rust ecosystem is well-developed and growing. This is not a conclusive/comprehensive list of the ecosystem or the companies using it. From my knowledge, Rust is used at big companies such as Amazon, Apple, Microsoft and Google. They are all investing in the language. We\u2019ve covered the ecosystem from a bird\u2019s-eye view as we see it today. Here are the main things to walk away with: Overview The community is ubiquitous both online and in-person There is no shortage of books or references to read from the official Rust groups Rust can be used for writing web, mobile, and CLI apps, servers embedded devices, and OS\u2019s Rust is fast, well-documented, type-safe, manages memory efficiently, but has a steep learning curve","title":"Summary"},{"location":"public/rust/rust-lang-ecosystem/#whats-next","text":"We plan to use this information when making decisions and building strategies for us to get involved with the Rust ecosystem. If you\u2019d like to collaborate with us, please reach out to me over DMs on Twitter ! We would love to work with you. Thank you for reading!","title":"What\u2019s next?"},{"location":"public/rust/rust-lang-ecosystem/#thank-you","text":"To close out, I\u2019d like to give thanks to the following people for their contributions and feedback. I appreciate all of you! David Tolnay Pedro Rittner Jk Jensen Joe Savona Nell Shamrell-Harrington Lauren Tan Kathy Kam Cami Williams Joel Marcey","title":"Thank you"},{"location":"public/rust/rust-lang-ecosystem/#join-the-newsletter","text":"I send a monthly newsletter with 1 exciting thing, 1 helpful thing, and new jobs. Email* By subscribing, you agree with Revue\u2019s Terms of Service and Privacy Policy . \u00a92022 Joe Previte","title":"Join the Newsletter"},{"location":"public/rust/rust-lang/","text":"For me, I chose the following parameters to limit my choices: beginner-friendly (docs or bugfix) something small in scope (ideally, something I could do within a few days) only look at repos in rust-lang GitHub org This added a fence around the number of possibilities. It made it easier to get started. I modified my search criteria to use the \u201cE-mentor\u201d label instead of the \u201cE-easy.\u201d I figured having an experienced Rust developer guiding me would help my learning. How to Use In 2mins or less, lets show you exactly how to use it:","title":"Rust lang"},{"location":"public/rust/rust-learning-plan-chapter-1-notes/","text":"Rust Learning Plan & Chapter 1 Notes Last updated: 03/06/2020 Hello and welcome! This might be the first time we meet so I thought I\u2019d start this post off with a short introduction. I\u2019m Joe and previously I worked with JavaScript building web apps and mobile apps. Now, I\u2019m learning Rust both for personal reasons and work-related reasons. One of my primary focuses for this half of the year is Rust! Beyond that though, I am personally excited about Rust because: it\u2019s exciting it\u2019s type-safe (Yay, coming from TypeScript!) it\u2019s performant it has excellent documentation it has a strong community I dabbled a bit about a year ago doing some exercises on exercism but now learning Rust is a high priority. You might be interested in Rust because you can build: CLI tools Web apps (compile to WASM, or Web Assembly) Web servers And many other exciting things! For March, I decided to put together a plan to learn a little bit of Rust. The purpose is to start building projects with Rust and get involved in the community. Here\u2019s what the plan looks like: Learn enough Rust to be dangerous, measured by: ability to understand and explain basic concepts in Rust ability to contribute code to an open source project in the Rust community ability to build and ship a small project in Rust I\u2019ve taken these objectives and broken them out into actionable tasks. They are as follows: Read Chapters 1-3 of the Rust Lang Book (by Steve Klabnik and Carol Nichols, with contributions from the Rust Community) Write 3 blog posts Contribute to an open source project (bug fix or docs) Build a small web server app (bunny1 clone) This is the first blog post in the series, which covers my notes and thoughts on Chapter 1 of the Rust Lang Book. If you read Chapter 1 and would like to discuss, let\u2019s have a conversation! Tweet @ me or shoot me a DM on Twitter. Notes on Chapter 1 The first chapter in the Rust Lang Book is a friendly introduction to Rust. It covers enough of the basics to get started. You download Rust and then write your first program, which prints \u201cHello, World!\u201d Here are things I wrote down while reading the first chapter online: rustup is the preferred version manager Coming from the JavaScript world, I\u2019m used to scouring the internet for a decent node version manager. The common goto is nvm. Lucky for us, the Rust team supplies an official version manager and it\u2019s called rustup. Free, offline docs - out-of-the-box I noted this after rereading some of Chapter 1. rustup comes with a version of the docs that you can launch and read offline \ud83d\ude31 How genius is that?! rustup doc cargo commands are like npm commands Similar to how we use npm in the JS world for packaging and building our projects, cargo serves a similar purpose for Rust. Rust leans towards snake_case In JS, I used camelCase when naming things. It seems like the Rust community leans towards snake_case. This was evident during the hello world exercise. We named the project directory hello_world. My assumption may be premature. semicolons have meaning There is a great debate in JS - semicolons or no semicolons? While the choice is mainly conventional in JavaScript, Rust is a bit different. Most of the time, you\u2019ll use them to declare the end of an expression. Here\u2019s an example: // Rust example println!(\"Hello, world!\"); Like all good rules in programming languages, there is an exception! If you don\u2019t include it in a code block, it returns the last line. Here\u2019s what that looks like: // Rust if x < 5 { x + 1 } There is no semicolon but this will still return x plus 1. Reminds me of the arrow function implicit return in JavaScript: // JavaScript const firstName = () => 'Rusty' Rust has an official code formatter If you\u2019re not familiar with the Prettier, it\u2019s an opinionated code formatter. It supports a lot of different languages. I believe it\u2019s the most used one in JavaScript. A positive note about Rust is that they have an official formatter called rustfmt. And even better, the Rust book says, The Rust team plans to eventually include this tool with the standard Rust distribution Official formatting - hooray! Another thing we don\u2019t have to worry about. Rust uses macros I wasn\u2019t familiar with this because JavaScript does not have them. They look like functions, but according to Computer Hope, macros are \u201ca tool that allows a developer to re-use code.\u201d I thought it was like a function, but they have a note saying, A macro is not the same as a function. Functions require special instructions and computational overhead to safely pass arguments and return values. A macro is a way to repeat frequently-used lines of code. Here is an example using the println! macro in Rust: // Rust println!(\"Howdy, friend!\"); The \u201c!\u201d in \u201cprintln!\u201d means it\u2019s a macro After learning about macros, I asked myself, \u201cBut how do you know if it\u2019s a local function vs. macro?\u201d Then I realized, it\u2019s the !. That\u2019s the pattern to look for. \u201cBinary executable\u201d is fancy terms for \u201ccomputer-ready-file\u201d I\u2019ve heard the term \u201cbinary executable.\u201d I know what \u201cbinary\u201d means and I know what \u201cexecutable\u201d means, but I highlighted this anyway. In layperson terms, it means the computer can read and execute it without anyone\u2019s help. Compile before you run, you must When I learned JavaScript, I never fully understood the whole compiled vs interpreted lingo. Well, now I have a basic understanding. In most cases, a JavaScript engine (like V8) \u201ccompiles JavaScript code into machine code at execution by implementing a JIT (Just-In-Time) compiler.\u201d Notice though, the JS engine does this, not the developer. In Rust (and many other languages), there is a compile step that you, the developer, must do. So you must compile your code before you can run it. Ahead-of-time compilation is awesome I hadn\u2019t previously heard this phrase \u201cahead-of-time compilation\u201d but now I get what it is and why it\u2019s awesome. You compile your program and it outputs a file. Because you compiled \u201cahead of time\u201d \ud83d\ude09 you can send it to a friend who can then run it on their machine without having Rust. That\u2019s amazing! At least coming from JS/Python. With Rust, it\u2019s already ready to go! cargo new, what it do? Going back to our npm comparison, it is like npm init and creates a new Rust project. What makes it even better though is that it includes a .gitignore file for you. It\u2019s fantastic. crates are like npm packages Crates are bundled up pieces of code. Similar to the JS world, you install a package from npm, you do the same with Rust, but with crates. I love the term \u201ccrate.\u201d It\u2019s kind of fun to say and isn\u2019t an everyday term like \u201cpackages\u201d. The official crates registry is crates.io. The other differentiating factor is that crates.io is \u201cmanaged by members of the Crates.io and Rust core teams.\u201d I hope this means it\u2019s more sustainable and community-driven. Rust encourages project folder structure Coming from the JS world, you can put your files in any directory you want (most of the time). You then tell your bundler where to look. What I like about Rust is that it encourages a project folder structure out the gate. According to the book, \u201cCargo expects your source files to live inside the src directory.\u201d This is great! One less thing for us to think about. You can, of course, override this by setting the path value in your cargo.toml (I googled out of curiosity). cargo check - \u201cAm I doing this right?\u201d cargo check will check your source code without building it. This is a good way to iterate quickly. cargo build \u2014release - \u201cShip it!\u201d This one is more of a reminder for me. When you\u2019re ready to ship your code to production, add the release flag to your build step: cargo build --release fn: function keyword is only two letters In JavaScript, we have to use seven keystrokes to declare a function. That\u2019s a lot! But in Rust, we only need to write two: fn. How cool is that? We\u2019re five keystrokes richer in Rust. What\u2019s next? As previously mentioned, next up for me is Chapter 2 of the Rust Lang Book. Here, they\u2019ll walk us through programming a guessing game - hooray! I\u2019m excited about this. The next blog post in this series will cover my notes on building my first real project in Rust. Until then, happy coding my fellow Rustaceans! \ud83e\udd80 P.S. - I included a glossary and cheatsheet at the end here. Enjoy! Glossary I covered a decent number of new words (at least for me) in this post. I find it helpful to remind myself what they each mean. Here are they are described in my own words: ahead-of-time compilation - compiling beforehand binary executable - a file that a computer already understands Cargo - Rust\u2019s official build system and package manager crate - a bundle of code that you can use in your project crates.io - the official Rust package registry developer advocate - someone who can talk about and write code and works with the dev community macro - it\u2019s like a global function Rustacean - a Rust community member rustup - the official Rust version manager WASM - Web Assembly Cheatsheet Most of the commands that were covered in Chapter 1: Install Rust with rustup curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh Update to the latest version of Rust rustup update Check your version of Rust rustc --version Open the docs for Rust locally (available offline too) rustup doc Manually compile a file rustc main.rs Check your version of cargo cargo --version Create a new Rust program cargo new Example for a project named hello_world cargo new hello_world Check that Rust program compiles cargo check Build a Rust program cargo build Run a Rust program cargo run Build a Rust program for production cargo build --release","title":"Rust learning plan chapter 1 notes"},{"location":"public/rust/rust-learning-plan-chapter-1-notes/#example-for-a-project-named-hello_world","text":"cargo new hello_world Check that Rust program compiles cargo check Build a Rust program cargo build Run a Rust program cargo run Build a Rust program for production cargo build --release","title":"Example for a project named hello_world"},{"location":"public/university/master/","text":"Master Thesis--Arman Riazi Abstract Nowadays with the development of technology, we observe an increase in the number of users using Cloud Computing services. The process of increasing demand, the need for intelligent supply and demand cycle, better resource management, better utilization of resources is necessary. The results indicate competition from the cycle leads to a complex challenge for selecting and scheduling tasks to provide composite services in the Cloud. One of the most important issues in this field is Load Balancing. How to choose idle resources from a set of resources, overcoming compositional constraints, determines the importance of scheduling and resource allocation. These are NP-Hard issues. State-of-the-art architecture in the field of Cloud Computing for the implementation of Scientific Workflows that can be implemented in a distributed manner is becoming increasingly considered in other sciences related to Cloud Computing. The distinction and competition of Cloud Service Providers to publish services with more profit and better quality to customers are summarized in features such as \"Scalability, Stability, High availability, Fault tolerance.\" By providing new solutions and services for using specialists in other sciences, we can see the utilization of Cloud Computing Infrastructure and services in the fields of industry, commerce, health, and emergency applications. The possibility of conducting Scientific Workflows using Virtual Machines\" and Containers is a goal that has been addressed in the proposed architecture. The Load Balancing in the form of Containers at the level of Virtual Machines using the Ant Colony Optimization(ACO) algorithm is one of the important goals and issues that have been covered and solutions for utilization as much as possible has been explained. According to previous studies, there is no comprehensive or stable architecture that can balance Scientific Workflows using the algorithm ACO at the container virtualization level. By providing a simulator environment and testing several samples with different parameters then estimated the efficiency of the ACO and default algorithm of [[Cloudsim]], ie First-Come-First-Serve(FCFS). In the case of fifty, hundred Samples of Montage Scientific Workflow, which is considered as the average load rate, balancing the workload of the Containers on the Virtual Machine with the ACO has better results than the FCFS. If the value of the beta parameter of the ACO is assigned by zero, the algorithm will be trapped to the local optimal. In the case of a thousand sample, which is interpreted as a large amount of workload, if a Cybershake Workflow is used finally the results will be the same in all performance evaluation indicators. Keywords: [[Cloud]]Computing, #ContainerAllocation, [[Workflow]], #ACO Info Getting Project-OpenSource References [1] Malawski, M., Gajek, A., Zima, A., Balis, B., & Figiela, K. (2020). Serverless execution of scientific workflows: Experiments with hyperflow, aws lambda and google cloud functions. Future Generation Computer Systems, 110, 502-514. [2] Kavitha, Kadarla, and S. C. Sharma. \"Performance analysis of ACO\u2010based improved virtual machine allocation in cloud for IoT\u2010enabled healthcare.\" Concurrency and Computation: Practice and Experience 32, nov. 21 (2020): e5613. [3] Leitner, Philipp, Erik Wittern, Josef Spillner, and Waldemar Hummer. \"A mixed-method empirical study of Function-as-a-Service software development in industrial practice.\" Journal of Systems and Software 149 (2019): 340-359. [4] Shafiei, Hossein, Ahmad Khonsari, and Payam Mousavi. \"Serverless computing: A survey of opportunities, challenges and applications.\" arXiv preprint arXiv:1911.01296 (2019). [5] Garc\u00eda-L\u00f3pez, Pedro, Marc S\u00e1nchez-Artigas, Simon Shillaker, Peter Pietzuch, David Breitgand, Gil Vernik, Pierre Sutra, Tristan Tarrant, and Ana Juan Ferrer. \"Servermix: Tradeoffs and challenges of serverless data analytics.\" arXiv preprint arXiv:1907.11465 (2019). [6] P\u00e9rez A, Molt\u00f3 G, Caballer M, Calatrava A. Serverless computing for container-based architectures. Future Generation Computer Systems. 2018 Jun 1;83:50-9. [7] Spillner, Josef. \"Snafu: Function-as-a-service (faas) runtime design and implementation.\" arXiv preprint arXiv:1703.07562 (2017). [8] Jiang, Qingye, Young Choon Lee, and Albert Y. Zomaya. \"Serverless execution of scientific workflows.\" In International Conference on Service-Oriented Computing, pp. 706-721. Springer, Cham, 2017. [9] Chen, Weiwei, and Ewa Deelman. \"Workflowsim: A toolkit for simulating scientific workflows in distributed environments.\" In 2012 IEEE 8th international conference on E-science, pp. 1-8. IEEE, 2012. [10] Piraghaj, Sareh Fotuhi, Amir Vahid Dastjerdi, Rodrigo N. Calheiros, and Rajkumar Buyya. \"ContainerCloudSim: An environment for modeling and simulation of containers in cloud data centers.\" Software: Practice and Experience 47, no. 4 (2017): 505-521. [11] He, Zhenxiang, Jiankang Dong, Zhengjiang Li, and Wenjuan Guo. \"Research on Task Scheduling Strategy Optimization Based onACO in Cloud Computing Environment.\" In 2020 IEEE 5th Information Technology and Mechatronics Engineering Conference (ITOEC), pp. 1615-1619. IEEE, 2020. [12] Balis, Bartosz. \"HyperFlow: A model of computation, programming approach and enactment engine for complex distributed workflows.\" Future Generation Computer Systems 55 (2016): 147-162. [13] Kacsuk, Peter, J\u00f3zsef Kov\u00e1cs, and Zolt\u00e1n Farkas. \"The flowbster cloud-oriented workflow system to process large scientific data sets.\" Journal of Grid Computing 16, no. 1 (2018): 55-83. [14] Jonas, Eric, Johann Schleier-Smith, Vikram Sreekanti, Chia-Che Tsai, Anurag Khandelwal, Qifan Pu, Vaishaal Shankar et al. \"Cloud programming simplified: A berkeley view on serverless computing.\" arXiv preprint arXiv:1902.03383 (2019). [15] Wickremasinghe, B., Calheiros, R. N., & Buyya, R. (2010, April). Cloudanalyst: A cloudsim-based visual modeller for analysing cloud computing environments and applications. In 2010 24th IEEE international conference on advanced information networking and applications (pp. 446-452). IEEE. [16] Soltani, Boubaker, Afifa Ghenai, and Nadia Zeghib. \"Towards distributed containerized serverless architecture in multi cloud environment.\" Procedia computer science 134 (2018): 121-128. [17] Sturm, Rick, Carol Pollard, and Julie Craig. \"The NIST definition of cloud computing.\" In Proc. Appl. Perform. Manage.(APM) Digit. Enterprise, pp. 267-269. 2017. [18] Karmel, Anil, Ramaswamy Chandramouli, and Michaela Iorga. Nist definition of microservices, application containers and system virtual machines. No. NIST Special Publication (SP) 800-180 (Draft). National Institute of Standards and Technology, 2016. [19] Casalicchio, Emiliano. \"Autonomic Orchestration of Containers: Problem Definition and Research Challenges.\" In VALUETOOLS. 2016. [20] Cord\u00f3n Garc\u00eda, Oscar, Francisco Herrera Triguero, and Thomas St\u00fctzle. \"A review on the ant colony optimization metaheuristic: Basis, models and new trends.\" Mathware & soft computing. 2002 Vol. 9 N\u00fam. 2 [-3] (2002). [21] Choe, Tae-Young. \"Dynamic Task Scheduling Algorithm based on Ant Colony Scheme.\" (2015). [22] Fl\u00f3rez, Edson, Wilfredo G\u00f3mez, and Lola Bautista. \"An ant colony optimization algorithm for job shop scheduling problem.\" arXiv preprint arXiv:1309.5110 (2013). [23] Katiyar, Sapna, N. Ibraheem, and Abdul Quaiyum Ansari. \"Ant colony optimization: a tutorial review.\" In National Conference on Advances in Power and Control, pp. 99-110. 2015. [24] Lin, Miao, Jianqing Xi, Weihua Bai, and Jiayin Wu. \"Ant colony algorithm for multi-objective optimization of container-based microservice scheduling in cloud.\" IEEE Access 7 (2019): 83088-83100. [25] Rani, Rama, and Ritu Garg. \"Power and temperature-aware workflow scheduling considering deadline constraint in cloud.\" Arabian Journal for Science and Engineering 45, no. 12 (2020): 10775-10791. [26] Gutjahr, Walter J. \"ACO algorithms with guaranteed convergence to the optimal solution.\" Information processing letters 82, no. 3 (2002): 145-153.","title":"Master Thesis--Arman Riazi"},{"location":"public/university/master/#master-thesis-arman-riazi","text":"","title":"Master Thesis--Arman Riazi"},{"location":"public/university/master/#abstract","text":"Nowadays with the development of technology, we observe an increase in the number of users using Cloud Computing services. The process of increasing demand, the need for intelligent supply and demand cycle, better resource management, better utilization of resources is necessary. The results indicate competition from the cycle leads to a complex challenge for selecting and scheduling tasks to provide composite services in the Cloud. One of the most important issues in this field is Load Balancing. How to choose idle resources from a set of resources, overcoming compositional constraints, determines the importance of scheduling and resource allocation. These are NP-Hard issues. State-of-the-art architecture in the field of Cloud Computing for the implementation of Scientific Workflows that can be implemented in a distributed manner is becoming increasingly considered in other sciences related to Cloud Computing. The distinction and competition of Cloud Service Providers to publish services with more profit and better quality to customers are summarized in features such as \"Scalability, Stability, High availability, Fault tolerance.\" By providing new solutions and services for using specialists in other sciences, we can see the utilization of Cloud Computing Infrastructure and services in the fields of industry, commerce, health, and emergency applications. The possibility of conducting Scientific Workflows using Virtual Machines\" and Containers is a goal that has been addressed in the proposed architecture. The Load Balancing in the form of Containers at the level of Virtual Machines using the Ant Colony Optimization(ACO) algorithm is one of the important goals and issues that have been covered and solutions for utilization as much as possible has been explained. According to previous studies, there is no comprehensive or stable architecture that can balance Scientific Workflows using the algorithm ACO at the container virtualization level. By providing a simulator environment and testing several samples with different parameters then estimated the efficiency of the ACO and default algorithm of [[Cloudsim]], ie First-Come-First-Serve(FCFS). In the case of fifty, hundred Samples of Montage Scientific Workflow, which is considered as the average load rate, balancing the workload of the Containers on the Virtual Machine with the ACO has better results than the FCFS. If the value of the beta parameter of the ACO is assigned by zero, the algorithm will be trapped to the local optimal. In the case of a thousand sample, which is interpreted as a large amount of workload, if a Cybershake Workflow is used finally the results will be the same in all performance evaluation indicators. Keywords: [[Cloud]]Computing, #ContainerAllocation, [[Workflow]], #ACO Info Getting Project-OpenSource","title":"Abstract"},{"location":"public/university/master/#references","text":"[1] Malawski, M., Gajek, A., Zima, A., Balis, B., & Figiela, K. (2020). Serverless execution of scientific workflows: Experiments with hyperflow, aws lambda and google cloud functions. Future Generation Computer Systems, 110, 502-514. [2] Kavitha, Kadarla, and S. C. Sharma. \"Performance analysis of ACO\u2010based improved virtual machine allocation in cloud for IoT\u2010enabled healthcare.\" Concurrency and Computation: Practice and Experience 32, nov. 21 (2020): e5613. [3] Leitner, Philipp, Erik Wittern, Josef Spillner, and Waldemar Hummer. \"A mixed-method empirical study of Function-as-a-Service software development in industrial practice.\" Journal of Systems and Software 149 (2019): 340-359. [4] Shafiei, Hossein, Ahmad Khonsari, and Payam Mousavi. \"Serverless computing: A survey of opportunities, challenges and applications.\" arXiv preprint arXiv:1911.01296 (2019). [5] Garc\u00eda-L\u00f3pez, Pedro, Marc S\u00e1nchez-Artigas, Simon Shillaker, Peter Pietzuch, David Breitgand, Gil Vernik, Pierre Sutra, Tristan Tarrant, and Ana Juan Ferrer. \"Servermix: Tradeoffs and challenges of serverless data analytics.\" arXiv preprint arXiv:1907.11465 (2019). [6] P\u00e9rez A, Molt\u00f3 G, Caballer M, Calatrava A. Serverless computing for container-based architectures. Future Generation Computer Systems. 2018 Jun 1;83:50-9. [7] Spillner, Josef. \"Snafu: Function-as-a-service (faas) runtime design and implementation.\" arXiv preprint arXiv:1703.07562 (2017). [8] Jiang, Qingye, Young Choon Lee, and Albert Y. Zomaya. \"Serverless execution of scientific workflows.\" In International Conference on Service-Oriented Computing, pp. 706-721. Springer, Cham, 2017. [9] Chen, Weiwei, and Ewa Deelman. \"Workflowsim: A toolkit for simulating scientific workflows in distributed environments.\" In 2012 IEEE 8th international conference on E-science, pp. 1-8. IEEE, 2012. [10] Piraghaj, Sareh Fotuhi, Amir Vahid Dastjerdi, Rodrigo N. Calheiros, and Rajkumar Buyya. \"ContainerCloudSim: An environment for modeling and simulation of containers in cloud data centers.\" Software: Practice and Experience 47, no. 4 (2017): 505-521. [11] He, Zhenxiang, Jiankang Dong, Zhengjiang Li, and Wenjuan Guo. \"Research on Task Scheduling Strategy Optimization Based onACO in Cloud Computing Environment.\" In 2020 IEEE 5th Information Technology and Mechatronics Engineering Conference (ITOEC), pp. 1615-1619. IEEE, 2020. [12] Balis, Bartosz. \"HyperFlow: A model of computation, programming approach and enactment engine for complex distributed workflows.\" Future Generation Computer Systems 55 (2016): 147-162. [13] Kacsuk, Peter, J\u00f3zsef Kov\u00e1cs, and Zolt\u00e1n Farkas. \"The flowbster cloud-oriented workflow system to process large scientific data sets.\" Journal of Grid Computing 16, no. 1 (2018): 55-83. [14] Jonas, Eric, Johann Schleier-Smith, Vikram Sreekanti, Chia-Che Tsai, Anurag Khandelwal, Qifan Pu, Vaishaal Shankar et al. \"Cloud programming simplified: A berkeley view on serverless computing.\" arXiv preprint arXiv:1902.03383 (2019). [15] Wickremasinghe, B., Calheiros, R. N., & Buyya, R. (2010, April). Cloudanalyst: A cloudsim-based visual modeller for analysing cloud computing environments and applications. In 2010 24th IEEE international conference on advanced information networking and applications (pp. 446-452). IEEE. [16] Soltani, Boubaker, Afifa Ghenai, and Nadia Zeghib. \"Towards distributed containerized serverless architecture in multi cloud environment.\" Procedia computer science 134 (2018): 121-128. [17] Sturm, Rick, Carol Pollard, and Julie Craig. \"The NIST definition of cloud computing.\" In Proc. Appl. Perform. Manage.(APM) Digit. Enterprise, pp. 267-269. 2017. [18] Karmel, Anil, Ramaswamy Chandramouli, and Michaela Iorga. Nist definition of microservices, application containers and system virtual machines. No. NIST Special Publication (SP) 800-180 (Draft). National Institute of Standards and Technology, 2016. [19] Casalicchio, Emiliano. \"Autonomic Orchestration of Containers: Problem Definition and Research Challenges.\" In VALUETOOLS. 2016. [20] Cord\u00f3n Garc\u00eda, Oscar, Francisco Herrera Triguero, and Thomas St\u00fctzle. \"A review on the ant colony optimization metaheuristic: Basis, models and new trends.\" Mathware & soft computing. 2002 Vol. 9 N\u00fam. 2 [-3] (2002). [21] Choe, Tae-Young. \"Dynamic Task Scheduling Algorithm based on Ant Colony Scheme.\" (2015). [22] Fl\u00f3rez, Edson, Wilfredo G\u00f3mez, and Lola Bautista. \"An ant colony optimization algorithm for job shop scheduling problem.\" arXiv preprint arXiv:1309.5110 (2013). [23] Katiyar, Sapna, N. Ibraheem, and Abdul Quaiyum Ansari. \"Ant colony optimization: a tutorial review.\" In National Conference on Advances in Power and Control, pp. 99-110. 2015. [24] Lin, Miao, Jianqing Xi, Weihua Bai, and Jiayin Wu. \"Ant colony algorithm for multi-objective optimization of container-based microservice scheduling in cloud.\" IEEE Access 7 (2019): 83088-83100. [25] Rani, Rama, and Ritu Garg. \"Power and temperature-aware workflow scheduling considering deadline constraint in cloud.\" Arabian Journal for Science and Engineering 45, no. 12 (2020): 10775-10791. [26] Gutjahr, Walter J. \"ACO algorithms with guaranteed convergence to the optimal solution.\" Information processing letters 82, no. 3 (2002): 145-153.","title":"References"},{"location":"tags/","text":"Tags Following is a list of relevant tags:","title":"Tags"},{"location":"tags/#tags","text":"Following is a list of relevant tags:","title":"Tags"}]}